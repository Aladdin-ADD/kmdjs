(function(n){function l(n,t,u){var f=i.createElement("script"),s;u&&(s=isFunction(u)?u(n):u,s&&(f.charset=s)),a(f,t,n),f.async=!0,f.src=n,o=f,e?r.insertBefore(f,e):r.appendChild(f),o=null}function a(n,t,i){function u(i){n.onload=n.onerror=n.onreadystatechange=null,c.debug||r.removeChild(n),n=null,t(i)}var f="onload"in n;f?(n.onload=u,n.onerror=function(){throw"bad request!__"+i+"  404 (Not Found) ";}):n.onreadystatechange=function(){/loaded|complete/.test(n.readyState)&&u()}}function v(n,t){var r,i;if(n.lastIndexOf)return n.lastIndexOf(t);for(r=t.length,i=n.length-1-r;i>-1;i--)if(t===n.substr(i,r))return i;return-1}var h="HelloKMD",i=document,c={},r=i.head||i.getElementsByTagName("head")[0]||i.documentElement,e=r.getElementsByTagName("base")[0],o,u={},t;u.get=function(n,i){var f,e,o,u,r,s;for(typeof n=="string"&&(n=[n]),r=0,u=n.length;r<u;r++)v(n[r],".")==-1&&(n[r]=h+"."+n[r]);for(f=!0,e=[],r=0,u=n.length;r<u;r++)t.modules[n[r]]?e.push(t.modules[n[r]]):f=!1;if(f)i.apply(null,e);else for(o=0,u=n.length,r=0;r<u;r++)s=[],l(n[r]+".js",function(){if(o++,o==u){for(var r=0;r<u;r++)t.modules[n[r]]&&s.push(t.modules[n[r]]);i.apply(null,s)}})},u.exec=function(n){for(var u,o,s,r=0,f=n.length;r<f;r++){var i=n[r],e=[],h=new Function(i.a,i.b);for(u=0,o=i.d.length;u<o;u++)e.push(t.modules[i.d[u]]);s=h.apply(null,e),t.modules[i.c]=s}},n.kmdjs=u;var f=!1,y=/xyz/.test(function(){xyz})?/_super/:/.*/,s=function(){};s.extend=function(n){function i(){!f&&this.init&&this.init.apply(this,arguments)}var e=this.prototype,u,r,t;f=!0,u=new this,f=!1;for(t in n)t!="statics"&&(u[t]=typeof n[t]=="function"&&typeof e[t]=="function"&&y.test(n[t])?function(n,t){return function(){var r=this._super,i;return this._super=e[n],i=t.apply(this,arguments),this._super=r,i}}(t,n[t]):n[t]);for(r in this)this.hasOwnProperty(r)&&r!="extend"&&(i[r]=this[r]);if(n.statics)for(t in n.statics)t=="init"?n.statics[t].call(i):i[t]=n.statics[t];return i.prototype=u,i.prototype.constructor=i,i.extend=arguments.callee,i},n.__class=s,t={},t.modules={},n.__modules=t.modules,t.all=[{"a":[],"b":"\nvar JQ = __class.extend({\n \"statics\": {\n \"init\": function() {\n var deletedIds = [];\n var slice = deletedIds.slice;\n var concat = deletedIds.concat;\n var push = deletedIds.push;\n var indexOf = deletedIds.indexOf;\n var class2type = {};\n var toString = class2type.toString;\n var hasOwn = class2type.hasOwnProperty;\n var support = {};\n var version = \"1.11.1\",\n jQuery = function(selector, context) {\n return new jQuery.fn.init(selector, context);\n },\n rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n rmsPrefix = /^-ms-/,\n rdashAlpha = /-([\\da-z])/gi,\n fcamelCase = function(all, letter) {\n return letter.toUpperCase();\n };\n jQuery.fn = jQuery.prototype = {\n jquery: version,\n constructor: jQuery,\n selector: \"\",\n length: 0,\n toArray: function() {\n return slice.call(this);\n },\n get: function(num) {\n return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this);\n },\n pushStack: function(elems) {\n var ret = jQuery.merge(this.constructor(), elems);\n ret.prevObject = this;\n ret.context = this.context;\n return ret;\n },\n each: function(callback, args) {\n return jQuery.each(this, callback, args);\n },\n map: function(callback) {\n return this.pushStack(jQuery.map(this, function(elem, i) {\n return callback.call(elem, i, elem);\n }));\n },\n slice: function() {\n return this.pushStack(slice.apply(this, arguments));\n },\n first: function() {\n return this.eq(0);\n },\n last: function() {\n return this.eq(-1);\n },\n eq: function(i) {\n var len = this.length,\n j = +i + (i < 0 ? len : 0);\n return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n },\n end: function() {\n return this.prevObject || this.constructor(null);\n },\n push: push,\n sort: deletedIds.sort,\n splice: deletedIds.splice\n };\n jQuery.extend = jQuery.fn.extend = function() {\n var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\n i = 1,\n length = arguments.length,\n deep = false;\n if (typeof target === \"boolean\") {\n deep = target;\n target = arguments[i] || {};\n i++;\n }\n if (typeof target !== \"object\" && !jQuery.isFunction(target)) {\n target = {};\n }\n if (i === length) {\n target = this;\n i--;\n }\n for (; i < length; i++) {\n if ((options = arguments[i]) != null) {\n for (name in options) {\n src = target[name];\n copy = options[name];\n if (target === copy) {\n continue;\n }\n if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n if (copyIsArray) {\n copyIsArray = false;\n clone = src && jQuery.isArray(src) ? src : [];\n } else {\n clone = src && jQuery.isPlainObject(src) ? src : {};\n }\n target[name] = jQuery.extend(deep, clone, copy);\n } else if (copy !== undefined) {\n target[name] = copy;\n }\n }\n }\n }\n return target;\n };\n jQuery.extend({\n expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n isReady: true,\n error: function(msg) {\n throw new Error(msg);\n },\n noop: function() {},\n isFunction: function(obj) {\n return jQuery.type(obj) === \"function\";\n },\n isArray: Array.isArray ||\n function(obj) {\n return jQuery.type(obj) === \"array\";\n },\n isWindow: function(obj) {\n return obj != null && obj == obj.window;\n },\n isNumeric: function(obj) {\n return !jQuery.isArray(obj) && obj - parseFloat(obj) >= 0;\n },\n isEmptyObject: function(obj) {\n var name;\n for (name in obj) {\n return false;;\n }\n return true;\n },\n isPlainObject: function(obj) {\n var key;\n if (!obj || jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)) {\n return false;\n }\n try {\n if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n return false;\n }\n } catch (e) {\n return false;\n }\n if (support.ownLast) {\n for (key in obj) {\n return hasOwn.call(obj, key);;\n }\n }\n for (key in obj) {}\n return key === undefined || hasOwn.call(obj, key);\n },\n type: function(obj) {\n if (obj == null) {\n return obj + \"\";\n }\n return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n },\n globalEval: function(data) {\n if (data && jQuery.trim(data)) {\n (window.execScript ||\n function(data) {\n window[\"eval\"].call(window, data);\n })(data);\n }\n },\n camelCase: function(string) {\n return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n },\n nodeName: function(elem, name) {\n return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n },\n each: function(obj, callback, args) {\n var value, i = 0,\n length = obj.length,\n isArray = isArraylike(obj);\n if (args) {\n if (isArray) {\n for (; i < length; i++) {\n value = callback.apply(obj[i], args);\n if (value === false) {\n break;\n }\n }\n } else {\n for (i in obj) {\n value = callback.apply(obj[i], args);\n if (value === false) {\n break;\n }\n }\n }\n } else {\n if (isArray) {\n for (; i < length; i++) {\n value = callback.call(obj[i], i, obj[i]);\n if (value === false) {\n break;\n }\n }\n } else {\n for (i in obj) {\n value = callback.call(obj[i], i, obj[i]);\n if (value === false) {\n break;\n }\n }\n }\n }\n return obj;\n },\n trim: function(text) {\n return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n },\n makeArray: function(arr, results) {\n var ret = results || [];\n if (arr != null) {\n if (isArraylike(Object(arr))) {\n jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n } else {\n push.call(ret, arr);\n }\n }\n return ret;\n },\n inArray: function(elem, arr, i) {\n var len;\n if (arr) {\n if (indexOf) {\n return indexOf.call(arr, elem, i);\n }\n len = arr.length;\n i = i ? i < 0 ? Math.max(0, len + i) : i : 0;\n for (; i < len; i++) {\n if (i in arr && arr[i] === elem) {\n return i;\n }\n }\n }\n return -1;\n },\n merge: function(first, second) {\n var len = +second.length,\n j = 0,\n i = first.length;\n while (j < len) {\n first[i++] = second[j++];\n }\n if (len !== len) {\n while (second[j] !== undefined) {\n first[i++] = second[j++];\n }\n }\n first.length = i;\n return first;\n },\n grep: function(elems, callback, invert) {\n var callbackInverse, matches = [],\n i = 0,\n length = elems.length,\n callbackExpect = !invert;\n for (; i < length; i++) {\n callbackInverse = !callback(elems[i], i);\n if (callbackInverse !== callbackExpect) {\n matches.push(elems[i]);\n }\n }\n return matches;\n },\n map: function(elems, callback, arg) {\n var value, i = 0,\n length = elems.length,\n isArray = isArraylike(elems),\n ret = [];\n if (isArray) {\n for (; i < length; i++) {\n value = callback(elems[i], i, arg);\n if (value != null) {\n ret.push(value);\n }\n }\n } else {\n for (i in elems) {\n value = callback(elems[i], i, arg);\n if (value != null) {\n ret.push(value);\n }\n }\n }\n return concat.apply([], ret);\n },\n guid: 1,\n proxy: function(fn, context) {\n var args, proxy, tmp;\n if (typeof context === \"string\") {\n tmp = fn[context];\n context = fn;\n fn = tmp;\n }\n if (!jQuery.isFunction(fn)) {\n return undefined;\n }\n args = slice.call(arguments, 2);\n proxy = function() {\n return fn.apply(context || this, args.concat(slice.call(arguments)));\n };\n proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n return proxy;\n },\n now: function() {\n return +(new Date());\n },\n support: support\n });\n jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n });\n\n function isArraylike(obj) {\n var length = obj.length,\n type = jQuery.type(obj);\n if (type === \"function\" || jQuery.isWindow(obj)) {\n return false;\n }\n if (obj.nodeType === 1 && length) {\n return true;\n }\n return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n }\n var Sizzle = (function(window) {\n var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = \"sizzle\" + -(new Date()),\n preferredDoc = window.document,\n dirruns = 0,\n done = 0,\n classCache = createCache(),\n tokenCache = createCache(),\n compilerCache = createCache(),\n sortOrder = function(a, b) {\n if (a === b) {\n hasDuplicate = true;\n }\n return 0;\n },\n strundefined = typeof undefined,\n MAX_NEGATIVE = 1 << 31,\n hasOwn = ({}).hasOwnProperty,\n arr = [],\n pop = arr.pop,\n push_native = arr.push,\n push = arr.push,\n slice = arr.slice,\n indexOf = arr.indexOf ||\n function(elem) {\n var i = 0,\n len = this.length;\n for (; i < len; i++) {\n if (this[i] === elem) {\n return i;\n }\n }\n return -1;\n },\n booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n characterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n identifier = characterEncoding.replace(\"w\", \"w#\"),\n attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace + \"*([*^$|!~]?=)\" + whitespace + \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n pseudos = \":(\" + characterEncoding + \")(?:\\\\((\" + \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + \".*\" + \")\\\\)|)\",\n rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n rpseudo = new RegExp(pseudos),\n ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n matchExpr = {\n \"ID\": new RegExp(\"^#(\" + characterEncoding + \")\"),\n \"CLASS\": new RegExp(\"^\\\\.(\" + characterEncoding + \")\"),\n \"TAG\": new RegExp(\"^(\" + characterEncoding.replace(\"w\", \"w*\") + \")\"),\n \"ATTR\": new RegExp(\"^\" + attributes),\n \"PSEUDO\": new RegExp(\"^\" + pseudos),\n \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n },\n rinputs = /^(?:input|select|textarea|button)$/i,\n rheader = /^h\\d$/i,\n rnative = /^[^{]+\\{\\s*\\[native \\w/,\n rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n rsibling = /[+~]/,\n rescape = /'|\\\\/g,\n runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n funescape = function(_, escaped, escapedWhitespace) {\n var high = \"0x\" + escaped - 0x10000;\n return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n };\n try {\n push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);\n arr[preferredDoc.childNodes.length].nodeType;\n } catch (e) {\n push = {\n apply: arr.length ?\n function(target, els) {\n push_native.apply(target, slice.call(els));\n } : function(target, els) {\n var j = target.length,\n i = 0;\n while ((target[j++] = els[i++])) {}\n target.length = j - 1;\n }\n };\n }\n function Sizzle(selector, context, results, seed) {\n var match, elem, m, nodeType, i, groups, old, nid, newContext, newSelector;\n if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n setDocument(context);\n }\n context = context || document;\n results = results || [];\n if (!selector || typeof selector !== \"string\") {\n return results;\n }\n if ((nodeType = context.nodeType) !== 1 && nodeType !== 9) {\n return [];\n }\n if (documentIsHTML && !seed) {\n if ((match = rquickExpr.exec(selector))) {\n if ((m = match[1])) {\n if (nodeType === 9) {\n elem = context.getElementById(m);\n if (elem && elem.parentNode) {\n if (elem.id === m) {\n results.push(elem);\n return results;\n }\n } else {\n return results;\n }\n } else {\n if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {\n results.push(elem);\n return results;\n }\n }\n } else if (match[2]) {\n push.apply(results, context.getElementsByTagName(selector));\n return results;\n } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n push.apply(results, context.getElementsByClassName(m));\n return results;\n }\n }\n if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n nid = old = expando;\n newContext = context;\n newSelector = nodeType === 9 && selector;\n if (nodeType === 1 && context.nodeName.toLowerCase() !== \"object\") {\n groups = tokenize(selector);\n if ((old = context.getAttribute(\"id\"))) {\n nid = old.replace(rescape, \"\\\\$&\");\n } else {\n context.setAttribute(\"id\", nid);\n }\n nid = \"[id='\" + nid + \"'] \";\n i = groups.length;\n while (i--) {\n groups[i] = nid + toSelector(groups[i]);\n }\n newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n newSelector = groups.join(\",\");\n }\n if (newSelector) {\n try {\n push.apply(results, newContext.querySelectorAll(newSelector));\n return results;\n } catch (qsaError) {} finally {\n if (!old) {\n context.removeAttribute(\"id\");\n }\n }\n }\n }\n }\n return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n }\n function createCache() {\n var keys = [];\n\n function cache(key, value) {\n if (keys.push(key + \" \") > Expr.cacheLength) {\n delete cache[keys.shift()];\n }\n return (cache[key + \" \"] = value);\n }\n return cache;\n }\n function markFunction(fn) {\n fn[expando] = true;\n return fn;\n }\n function assert(fn) {\n var div = document.createElement(\"div\");\n try {\n return !!fn(div);\n } catch (e) {\n return false;\n } finally {\n if (div.parentNode) {\n div.parentNode.removeChild(div);\n }\n div = null;\n }\n }\n function addHandle(attrs, handler) {\n var arr = attrs.split(\"|\"),\n i = attrs.length;\n while (i--) {\n Expr.attrHandle[arr[i]] = handler;\n }\n }\n function siblingCheck(a, b) {\n var cur = b && a,\n diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);\n if (diff) {\n return diff;\n }\n if (cur) {\n while ((cur = cur.nextSibling)) {\n if (cur === b) {\n return -1;\n }\n }\n }\n return a ? 1 : -1;\n }\n function createInputPseudo(type) {\n return function(elem) {\n var name = elem.nodeName.toLowerCase();\n return name === \"input\" && elem.type === type;\n };\n }\n function createButtonPseudo(type) {\n return function(elem) {\n var name = elem.nodeName.toLowerCase();\n return (name === \"input\" || name === \"button\") && elem.type === type;\n };\n }\n function createPositionalPseudo(fn) {\n return markFunction(function(argument) {\n argument = +argument;\n return markFunction(function(seed, matches) {\n var j, matchIndexes = fn([], seed.length, argument),\n i = matchIndexes.length;\n while (i--) {\n if (seed[(j = matchIndexes[i])]) {\n seed[j] = !(matches[j] = seed[j]);\n }\n }\n });\n });\n }\n function testContext(context) {\n return context && typeof context.getElementsByTagName !== strundefined && context;\n }\n support = Sizzle.support = {};\n isXML = Sizzle.isXML = function(elem) {\n var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n };\n setDocument = Sizzle.setDocument = function(node) {\n var hasCompare, doc = node ? node.ownerDocument || node : preferredDoc,\n parent = doc.defaultView;\n if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n return document;\n }\n document = doc;\n docElem = doc.documentElement;\n documentIsHTML = !isXML(doc);\n if (parent && parent !== parent.top) {\n if (parent.addEventListener) {\n parent.addEventListener(\"unload\", function() {\n setDocument();\n }, false);\n } else if (parent.attachEvent) {\n parent.attachEvent(\"onunload\", function() {\n setDocument();\n });\n }\n }\n support.attributes = assert(function(div) {\n div.className = \"i\";\n return !div.getAttribute(\"className\");\n });\n support.getElementsByTagName = assert(function(div) {\n div.appendChild(doc.createComment(\"\"));\n return !div.getElementsByTagName(\"*\").length;\n });\n support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function(div) {\n div.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n div.firstChild.className = \"i\";\n return div.getElementsByClassName(\"i\").length === 2;\n });\n support.getById = assert(function(div) {\n docElem.appendChild(div).id = expando;\n return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n });\n if (support.getById) {\n Expr.find[\"ID\"] = function(id, context) {\n if (typeof context.getElementById !== strundefined && documentIsHTML) {\n var m = context.getElementById(id);\n return m && m.parentNode ? [m] : [];\n }\n };\n Expr.filter[\"ID\"] = function(id) {\n var attrId = id.replace(runescape, funescape);\n return function(elem) {\n return elem.getAttribute(\"id\") === attrId;\n };\n };\n } else {\n delete Expr.find[\"ID\"];\n Expr.filter[\"ID\"] = function(id) {\n var attrId = id.replace(runescape, funescape);\n return function(elem) {\n var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n return node && node.value === attrId;\n };\n };\n }\n Expr.find[\"TAG\"] = support.getElementsByTagName ?\n function(tag, context) {\n if (typeof context.getElementsByTagName !== strundefined) {\n return context.getElementsByTagName(tag);\n }\n } : function(tag, context) {\n var elem, tmp = [],\n i = 0,\n results = context.getElementsByTagName(tag);\n if (tag === \"*\") {\n while ((elem = results[i++])) {\n if (elem.nodeType === 1) {\n tmp.push(elem);\n }\n }\n return tmp;\n }\n return results;\n };\n Expr.find[\"CLASS\"] = support.getElementsByClassName &&\n function(className, context) {\n if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) {\n return context.getElementsByClassName(className);\n }\n };\n rbuggyMatches = [];\n rbuggyQSA = [];\n if ((support.qsa = rnative.test(doc.querySelectorAll))) {\n assert(function(div) {\n div.innerHTML = \"<select msallowclip=''><option selected=''></option></select>\";\n if (div.querySelectorAll(\"[msallowclip^='']\").length) {\n rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n }\n if (!div.querySelectorAll(\"[selected]\").length) {\n rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n }\n if (!div.querySelectorAll(\":checked\").length) {\n rbuggyQSA.push(\":checked\");\n }\n });\n assert(function(div) {\n var input = doc.createElement(\"input\");\n input.setAttribute(\"type\", \"hidden\");\n div.appendChild(input).setAttribute(\"name\", \"D\");\n if (div.querySelectorAll(\"[name=d]\").length) {\n rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n }\n if (!div.querySelectorAll(\":enabled\").length) {\n rbuggyQSA.push(\":enabled\", \":disabled\");\n }\n div.querySelectorAll(\"*,:x\");\n rbuggyQSA.push(\",.*:\");\n });\n }\n if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {\n assert(function(div) {\n support.disconnectedMatch = matches.call(div, \"div\");\n matches.call(div, \"[s!='']:x\");\n rbuggyMatches.push(\"!=\", pseudos);\n });\n }\n rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n hasCompare = rnative.test(docElem.compareDocumentPosition);\n contains = hasCompare || rnative.test(docElem.contains) ?\n function(a, b) {\n var adown = a.nodeType === 9 ? a.documentElement : a,\n bup = b && b.parentNode;\n return a === bup || !! (bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n } : function(a, b) {\n if (b) {\n while ((b = b.parentNode)) {\n if (b === a) {\n return true;\n }\n }\n }\n return false;\n };\n sortOrder = hasCompare ?\n function(a, b) {\n if (a === b) {\n hasDuplicate = true;\n return 0;\n }\n var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n if (compare) {\n return compare;\n }\n compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;\n if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {\n if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n return -1;\n }\n if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n return 1;\n }\n return sortInput ? (indexOf.call(sortInput, a) - indexOf.call(sortInput, b)) : 0;\n }\n return compare & 4 ? -1 : 1;\n } : function(a, b) {\n if (a === b) {\n hasDuplicate = true;\n return 0;\n }\n var cur, i = 0,\n aup = a.parentNode,\n bup = b.parentNode,\n ap = [a],\n bp = [b];\n if (!aup || !bup) {\n return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf.call(sortInput, a) - indexOf.call(sortInput, b)) : 0;\n } else if (aup === bup) {\n return siblingCheck(a, b);\n }\n cur = a;\n while ((cur = cur.parentNode)) {\n ap.unshift(cur);\n }\n cur = b;\n while ((cur = cur.parentNode)) {\n bp.unshift(cur);\n }\n while (ap[i] === bp[i]) {\n i++;\n }\n return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n };\n return doc;\n };\n Sizzle.matches = function(expr, elements) {\n return Sizzle(expr, null, null, elements);\n };\n Sizzle.matchesSelector = function(elem, expr) {\n if ((elem.ownerDocument || elem) !== document) {\n setDocument(elem);\n }\n expr = expr.replace(rattributeQuotes, \"='$1']\");\n if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n try {\n var ret = matches.call(elem, expr);\n if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {\n return ret;\n }\n } catch (e) {}\n }\n return Sizzle(expr, document, null, [elem]).length > 0;\n };\n Sizzle.contains = function(context, elem) {\n if ((context.ownerDocument || context) !== document) {\n setDocument(context);\n }\n return contains(context, elem);\n };\n Sizzle.attr = function(elem, name) {\n if ((elem.ownerDocument || elem) !== document) {\n setDocument(elem);\n }\n var fn = Expr.attrHandle[name.toLowerCase()],\n val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n };\n Sizzle.error = function(msg) {\n throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n };\n Sizzle.uniqueSort = function(results) {\n var elem, duplicates = [],\n j = 0,\n i = 0;\n hasDuplicate = !support.detectDuplicates;\n sortInput = !support.sortStable && results.slice(0);\n results.sort(sortOrder);\n if (hasDuplicate) {\n while ((elem = results[i++])) {\n if (elem === results[i]) {\n j = duplicates.push(i);\n }\n }\n while (j--) {\n results.splice(duplicates[j], 1);\n }\n }\n sortInput = null;\n return results;\n };\n getText = Sizzle.getText = function(elem) {\n var node, ret = \"\",\n i = 0,\n nodeType = elem.nodeType;\n if (!nodeType) {\n while ((node = elem[i++])) {\n ret += getText(node);\n }\n } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n if (typeof elem.textContent === \"string\") {\n return elem.textContent;\n } else {\n for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n ret += getText(elem);\n }\n }\n } else if (nodeType === 3 || nodeType === 4) {\n return elem.nodeValue;\n }\n return ret;\n };\n Expr = Sizzle.selectors = {\n cacheLength: 50,\n createPseudo: markFunction,\n match: matchExpr,\n attrHandle: {},\n find: {},\n relative: {\n \">\": {\n dir: \"parentNode\",\n first: true\n },\n \" \": {\n dir: \"parentNode\"\n },\n \"+\": {\n dir: \"previousSibling\",\n first: true\n },\n \"~\": {\n dir: \"previousSibling\"\n }\n },\n preFilter: {\n \"ATTR\": function(match) {\n match[1] = match[1].replace(runescape, funescape);\n match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n if (match[2] === \"~=\") {\n match[3] = \" \" + match[3] + \" \";\n }\n return match.slice(0, 4);\n },\n \"CHILD\": function(match) {\n match[1] = match[1].toLowerCase();\n if (match[1].slice(0, 3) === \"nth\") {\n if (!match[3]) {\n Sizzle.error(match[0]);\n }\n match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n match[5] = +((match[7] + match[8]) || match[3] === \"odd\");\n } else if (match[3]) {\n Sizzle.error(match[0]);\n }\n return match;\n },\n \"PSEUDO\": function(match) {\n var excess, unquoted = !match[6] && match[2];\n if (matchExpr[\"CHILD\"].test(match[0])) {\n return null;\n }\n if (match[3]) {\n match[2] = match[4] || match[5] || \"\";\n } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n match[0] = match[0].slice(0, excess);\n match[2] = unquoted.slice(0, excess);\n }\n return match.slice(0, 3);\n }\n },\n filter: {\n \"TAG\": function(nodeNameSelector) {\n var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n return nodeNameSelector === \"*\" ?\n function() {\n return true;\n } : function(elem) {\n return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n };\n },\n \"CLASS\": function(className) {\n var pattern = classCache[className + \" \"];\n return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function(elem) {\n return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\");\n });\n },\n \"ATTR\": function(name, operator, check) {\n return function(elem) {\n var result = Sizzle.attr(elem, name);\n if (result == null) {\n return operator === \"!=\";\n }\n if (!operator) {\n return true;\n }\n result += \"\";\n return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n };\n },\n \"CHILD\": function(type, what, argument, first, last) {\n var simple = type.slice(0, 3) !== \"nth\",\n forward = type.slice(-4) !== \"last\",\n ofType = what === \"of-type\";\n return first === 1 && last === 0 ?\n function(elem) {\n return !!elem.parentNode;\n } : function(elem, context, xml) {\n var cache, outerCache, node, diff, nodeIndex, start, dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n parent = elem.parentNode,\n name = ofType && elem.nodeName.toLowerCase(),\n useCache = !xml && !ofType;\n if (parent) {\n if (simple) {\n while (dir) {\n node = elem;\n while ((node = node[dir])) {\n if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n return false;\n }\n }\n start = dir = type === \"only\" && !start && \"nextSibling\";\n }\n return true;\n }\n start = [forward ? parent.firstChild : parent.lastChild];\n if (forward && useCache) {\n outerCache = parent[expando] || (parent[expando] = {});\n cache = outerCache[type] || [];\n nodeIndex = cache[0] === dirruns && cache[1];\n diff = cache[0] === dirruns && cache[2];\n node = nodeIndex && parent.childNodes[nodeIndex];\n while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {\n if (node.nodeType === 1 && ++diff && node === elem) {\n outerCache[type] = [dirruns, nodeIndex, diff];\n break;\n }\n }\n } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {\n diff = cache[1];\n } else {\n while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {\n if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n if (useCache) {\n (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];\n }\n if (node === elem) {\n break;\n }\n }\n }\n }\n diff -= last;\n return diff === first || (diff % first === 0 && diff / first >= 0);\n }\n };\n },\n \"PSEUDO\": function(pseudo, argument) {\n var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo);\n if (fn[expando]) {\n return fn(argument);\n }\n if (fn.length > 1) {\n args = [pseudo, pseudo, \"\", argument];\n return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {\n var idx, matched = fn(seed, argument),\n i = matched.length;\n while (i--) {\n idx = indexOf.call(seed, matched[i]);\n seed[idx] = !(matches[idx] = matched[i]);\n }\n }) : function(elem) {\n return fn(elem, 0, args);\n };\n }\n return fn;\n }\n },\n pseudos: {\n \"not\": markFunction(function(selector) {\n var input = [],\n results = [],\n matcher = compile(selector.replace(rtrim, \"$1\"));\n return matcher[expando] ? markFunction(function(seed, matches, context, xml) {\n var elem, unmatched = matcher(seed, null, xml, []),\n i = seed.length;\n while (i--) {\n if ((elem = unmatched[i])) {\n seed[i] = !(matches[i] = elem);\n }\n }\n }) : function(elem, context, xml) {\n input[0] = elem;\n matcher(input, null, xml, results);\n return !results.pop();\n };\n }),\n \"has\": markFunction(function(selector) {\n return function(elem) {\n return Sizzle(selector, elem).length > 0;\n };\n }),\n \"contains\": markFunction(function(text) {\n return function(elem) {\n return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n };\n }),\n \"lang\": markFunction(function(lang) {\n if (!ridentifier.test(lang || \"\")) {\n Sizzle.error(\"unsupported lang: \" + lang);\n }\n lang = lang.replace(runescape, funescape).toLowerCase();\n return function(elem) {\n var elemLang;\n do {\n if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\"))) {\n elemLang = elemLang.toLowerCase();\n return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n }\n } while ((elem = elem.parentNode) && elem.nodeType === 1);\n return false;\n };\n }),\n \"target\": function(elem) {\n var hash = window.location && window.location.hash;\n return hash && hash.slice(1) === elem.id;\n },\n \"root\": function(elem) {\n return elem === docElem;\n },\n \"focus\": function(elem) {\n return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !! (elem.type || elem.href || ~elem.tabIndex);\n },\n \"enabled\": function(elem) {\n return elem.disabled === false;\n },\n \"disabled\": function(elem) {\n return elem.disabled === true;\n },\n \"checked\": function(elem) {\n var nodeName = elem.nodeName.toLowerCase();\n return (nodeName === \"input\" && !! elem.checked) || (nodeName === \"option\" && !! elem.selected);\n },\n \"selected\": function(elem) {\n if (elem.parentNode) {\n elem.parentNode.selectedIndex;\n }\n return elem.selected === true;\n },\n \"empty\": function(elem) {\n for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n if (elem.nodeType < 6) {\n return false;\n }\n }\n return true;\n },\n \"parent\": function(elem) {\n return !Expr.pseudos[\"empty\"](elem);\n },\n \"header\": function(elem) {\n return rheader.test(elem.nodeName);\n },\n \"input\": function(elem) {\n return rinputs.test(elem.nodeName);\n },\n \"button\": function(elem) {\n var name = elem.nodeName.toLowerCase();\n return name === \"input\" && elem.type === \"button\" || name === \"button\";\n },\n \"text\": function(elem) {\n var attr;\n return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ((attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n },\n \"first\": createPositionalPseudo(function() {\n return [0];\n }),\n \"last\": createPositionalPseudo(function(matchIndexes, length) {\n return [length - 1];\n }),\n \"eq\": createPositionalPseudo(function(matchIndexes, length, argument) {\n return [argument < 0 ? argument + length : argument];\n }),\n \"even\": createPositionalPseudo(function(matchIndexes, length) {\n var i = 0;\n for (; i < length; i += 2) {\n matchIndexes.push(i);\n }\n return matchIndexes;\n }),\n \"odd\": createPositionalPseudo(function(matchIndexes, length) {\n var i = 1;\n for (; i < length; i += 2) {\n matchIndexes.push(i);\n }\n return matchIndexes;\n }),\n \"lt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n var i = argument < 0 ? argument + length : argument;\n for (; --i >= 0;) {\n matchIndexes.push(i);\n }\n return matchIndexes;\n }),\n \"gt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n var i = argument < 0 ? argument + length : argument;\n for (; ++i < length;) {\n matchIndexes.push(i);\n }\n return matchIndexes;\n })\n }\n };\n Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n for (i in {\n radio: true,\n checkbox: true,\n file: true,\n password: true,\n image: true\n }) {\n Expr.pseudos[i] = createInputPseudo(i);\n }\n for (i in {\n submit: true,\n reset: true\n }) {\n Expr.pseudos[i] = createButtonPseudo(i);\n }\n function setFilters() {}\n setFilters.prototype = Expr.filters = Expr.pseudos;\n Expr.setFilters = new setFilters();\n tokenize = Sizzle.tokenize = function(selector, parseOnly) {\n var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + \" \"];\n if (cached) {\n return parseOnly ? 0 : cached.slice(0);\n }\n soFar = selector;\n groups = [];\n preFilters = Expr.preFilter;\n while (soFar) {\n if (!matched || (match = rcomma.exec(soFar))) {\n if (match) {\n soFar = soFar.slice(match[0].length) || soFar;\n }\n groups.push((tokens = []));\n }\n matched = false;\n if ((match = rcombinators.exec(soFar))) {\n matched = match.shift();\n tokens.push({\n value: matched,\n type: match[0].replace(rtrim, \" \")\n });\n soFar = soFar.slice(matched.length);\n }\n for (type in Expr.filter) {\n if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n matched = match.shift();\n tokens.push({\n value: matched,\n type: type,\n matches: match\n });\n soFar = soFar.slice(matched.length);\n }\n }\n if (!matched) {\n break;\n }\n }\n return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);\n };\n\n function toSelector(tokens) {\n var i = 0,\n len = tokens.length,\n selector = \"\";\n for (; i < len; i++) {\n selector += tokens[i].value;\n }\n return selector;\n }\n function addCombinator(matcher, combinator, base) {\n var dir = combinator.dir,\n checkNonElements = base && dir === \"parentNode\",\n doneName = done++;\n return combinator.first ?\n function(elem, context, xml) {\n while ((elem = elem[dir])) {\n if (elem.nodeType === 1 || checkNonElements) {\n return matcher(elem, context, xml);\n }\n }\n } : function(elem, context, xml) {\n var oldCache, outerCache, newCache = [dirruns, doneName];\n if (xml) {\n while ((elem = elem[dir])) {\n if (elem.nodeType === 1 || checkNonElements) {\n if (matcher(elem, context, xml)) {\n return true;\n }\n }\n }\n } else {\n while ((elem = elem[dir])) {\n if (elem.nodeType === 1 || checkNonElements) {\n outerCache = elem[expando] || (elem[expando] = {});\n if ((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n return (newCache[2] = oldCache[2]);\n } else {\n outerCache[dir] = newCache;\n if ((newCache[2] = matcher(elem, context, xml))) {\n return true;\n }\n }\n }\n }\n }\n };\n }\n function elementMatcher(matchers) {\n return matchers.length > 1 ?\n function(elem, context, xml) {\n var i = matchers.length;\n while (i--) {\n if (!matchers[i](elem, context, xml)) {\n return false;\n }\n }\n return true;\n } : matchers[0];\n }\n function multipleContexts(selector, contexts, results) {\n var i = 0,\n len = contexts.length;\n for (; i < len; i++) {\n Sizzle(selector, contexts[i], results);\n }\n return results;\n }\n function condense(unmatched, map, filter, context, xml) {\n var elem, newUnmatched = [],\n i = 0,\n len = unmatched.length,\n mapped = map != null;\n for (; i < len; i++) {\n if ((elem = unmatched[i])) {\n if (!filter || filter(elem, context, xml)) {\n newUnmatched.push(elem);\n if (mapped) {\n map.push(i);\n }\n }\n }\n }\n return newUnmatched;\n }\n function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n if (postFilter && !postFilter[expando]) {\n postFilter = setMatcher(postFilter);\n }\n if (postFinder && !postFinder[expando]) {\n postFinder = setMatcher(postFinder, postSelector);\n }\n return markFunction(function(seed, results, context, xml) {\n var temp, i, elem, preMap = [],\n postMap = [],\n preexisting = results.length,\n elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;\n if (matcher) {\n matcher(matcherIn, matcherOut, context, xml);\n }\n if (postFilter) {\n temp = condense(matcherOut, postMap);\n postFilter(temp, [], context, xml);\n i = temp.length;\n while (i--) {\n if ((elem = temp[i])) {\n matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n }\n }\n }\n if (seed) {\n if (postFinder || preFilter) {\n if (postFinder) {\n temp = [];\n i = matcherOut.length;\n while (i--) {\n if ((elem = matcherOut[i])) {\n temp.push((matcherIn[i] = elem));\n }\n }\n postFinder(null, (matcherOut = []), temp, xml);\n }\n i = matcherOut.length;\n while (i--) {\n if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {\n seed[temp] = !(results[temp] = elem);\n }\n }\n }\n } else {\n matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n if (postFinder) {\n postFinder(null, results, matcherOut, xml);\n } else {\n push.apply(results, matcherOut);\n }\n }\n });\n }\n function matcherFromTokens(tokens) {\n var checkContext, matcher, j, len = tokens.length,\n leadingRelative = Expr.relative[tokens[0].type],\n implicitRelative = leadingRelative || Expr.relative[\" \"],\n i = leadingRelative ? 1 : 0,\n matchContext = addCombinator(function(elem) {\n return elem === checkContext;\n }, implicitRelative, true),\n matchAnyContext = addCombinator(function(elem) {\n return indexOf.call(checkContext, elem) > -1;\n }, implicitRelative, true),\n matchers = [function(elem, context, xml) {\n return (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));}];\n for (; i < len; i++) {\n if ((matcher = Expr.relative[tokens[i].type])) {\n matchers = [addCombinator(elementMatcher(matchers), matcher)];\n } else {\n matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n if (matcher[expando]) {\n j = ++i;\n for (; j < len; j++) {\n if (Expr.relative[tokens[j].type]) {\n break;\n }\n }\n return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({\n value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens));\n }\n matchers.push(matcher);\n }\n }\n return elementMatcher(matchers);\n }\n function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n var bySet = setMatchers.length > 0,\n byElement = elementMatchers.length > 0,\n superMatcher = function(seed, context, xml, results, outermost) {\n var elem, j, matcher, matchedCount = 0,\n i = \"0\",\n unmatched = seed && [],\n setMatched = [],\n contextBackup = outermostContext,\n elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n len = elems.length;\n if (outermost) {\n outermostContext = context !== document && context;\n }\n for (; i !== len && (elem = elems[i]) != null; i++) {\n if (byElement && elem) {\n j = 0;\n while ((matcher = elementMatchers[j++])) {\n if (matcher(elem, context, xml)) {\n results.push(elem);\n break;\n }\n }\n if (outermost) {\n dirruns = dirrunsUnique;\n }\n }\n if (bySet) {\n if ((elem = !matcher && elem)) {\n matchedCount--;\n }\n if (seed) {\n unmatched.push(elem);\n }\n }\n }\n matchedCount += i;\n if (bySet && i !== matchedCount) {\n j = 0;\n while ((matcher = setMatchers[j++])) {\n matcher(unmatched, setMatched, context, xml);\n }\n if (seed) {\n if (matchedCount > 0) {\n while (i--) {\n if (!(unmatched[i] || setMatched[i])) {\n setMatched[i] = pop.call(results);\n }\n }\n }\n setMatched = condense(setMatched);\n }\n push.apply(results, setMatched);\n if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {\n Sizzle.uniqueSort(results);\n }\n }\n if (outermost) {\n dirruns = dirrunsUnique;\n outermostContext = contextBackup;\n }\n return unmatched;\n };\n return bySet ? markFunction(superMatcher) : superMatcher;\n }\n compile = Sizzle.compile = function(selector, match) {\n var i, setMatchers = [],\n elementMatchers = [],\n cached = compilerCache[selector + \" \"];\n if (!cached) {\n if (!match) {\n match = tokenize(selector);\n }\n i = match.length;\n while (i--) {\n cached = matcherFromTokens(match[i]);\n if (cached[expando]) {\n setMatchers.push(cached);\n } else {\n elementMatchers.push(cached);\n }\n }\n cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n cached.selector = selector;\n }\n return cached;\n };\n select = Sizzle.select = function(selector, context, results, seed) {\n var i, tokens, token, type, find, compiled = typeof selector === \"function\" && selector,\n match = !seed && tokenize((selector = compiled.selector || selector));\n results = results || [];\n if (match.length === 1) {\n tokens = match[0] = match[0].slice(0);\n if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n if (!context) {\n return results;\n } else if (compiled) {\n context = context.parentNode;\n }\n selector = selector.slice(tokens.shift().value.length);\n }\n i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n while (i--) {\n token = tokens[i];\n if (Expr.relative[(type = token.type)]) {\n break;\n }\n if ((find = Expr.find[type])) {\n if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {\n tokens.splice(i, 1);\n selector = seed.length && toSelector(tokens);\n if (!selector) {\n push.apply(results, seed);\n return results;\n }\n break;\n }\n }\n }\n }(compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context);\n return results;\n };\n support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando;\n support.detectDuplicates = !! hasDuplicate;\n setDocument();\n support.sortDetached = assert(function(div1) {\n return div1.compareDocumentPosition(document.createElement(\"div\")) & 1;\n });\n if (!assert(function(div) {\n div.innerHTML = \"<a href='#'></a>\";\n return div.firstChild.getAttribute(\"href\") === \"#\";\n })) {\n addHandle(\"type|href|height|width\", function(elem, name, isXML) {\n if (!isXML) {\n return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n }\n });\n }\n if (!support.attributes || !assert(function(div) {\n div.innerHTML = \"<input/>\";\n div.firstChild.setAttribute(\"value\", \"\");\n return div.firstChild.getAttribute(\"value\") === \"\";\n })) {\n addHandle(\"value\", function(elem, name, isXML) {\n if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n return elem.defaultValue;\n }\n });\n }\n if (!assert(function(div) {\n return div.getAttribute(\"disabled\") == null;\n })) {\n addHandle(booleans, function(elem, name, isXML) {\n var val;\n if (!isXML) {\n return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n }\n });\n }\n return Sizzle;\n })(window);\n jQuery.find = Sizzle;\n jQuery.expr = Sizzle.selectors;\n jQuery.expr[\":\"] = jQuery.expr.pseudos;\n jQuery.unique = Sizzle.uniqueSort;\n jQuery.text = Sizzle.getText;\n jQuery.isXMLDoc = Sizzle.isXML;\n jQuery.contains = Sizzle.contains;\n var rneedsContext = jQuery.expr.match.needsContext;\n var rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n var risSimple = /^.[^:#\\[\\.,]*$/;\n\n function winnow(elements, qualifier, not) {\n if (jQuery.isFunction(qualifier)) {\n return jQuery.grep(elements, function(elem, i) {\n return !!qualifier.call(elem, i, elem) !== not;\n });\n }\n if (qualifier.nodeType) {\n return jQuery.grep(elements, function(elem) {\n return (elem === qualifier) !== not;\n });\n }\n if (typeof qualifier === \"string\") {\n if (risSimple.test(qualifier)) {\n return jQuery.filter(qualifier, elements, not);\n }\n qualifier = jQuery.filter(qualifier, elements);\n }\n return jQuery.grep(elements, function(elem) {\n return (jQuery.inArray(elem, qualifier) >= 0) !== not;\n });\n }\n jQuery.filter = function(expr, elems, not) {\n var elem = elems[0];\n if (not) {\n expr = \":not(\" + expr + \")\";\n }\n return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {\n return elem.nodeType === 1;\n }));\n };\n jQuery.fn.extend({\n find: function(selector) {\n var i, ret = [],\n self = this,\n len = self.length;\n if (typeof selector !== \"string\") {\n return this.pushStack(jQuery(selector).filter(function() {\n for (i = 0; i < len; i++) {\n if (jQuery.contains(self[i], this)) {\n return true;\n }\n }\n }));\n }\n for (i = 0; i < len; i++) {\n jQuery.find(selector, self[i], ret);\n }\n ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);\n ret.selector = this.selector ? this.selector + \" \" + selector : selector;\n return ret;\n },\n filter: function(selector) {\n return this.pushStack(winnow(this, selector || [], false));\n },\n not: function(selector) {\n return this.pushStack(winnow(this, selector || [], true));\n },\n is: function(selector) {\n return !!winnow(this, typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n }\n });\n var rootjQuery, document = window.document,\n rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n init = jQuery.fn.init = function(selector, context) {\n var match, elem;\n if (!selector) {\n return this;\n }\n if (typeof selector === \"string\") {\n if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\n match = [null, selector, null];\n } else {\n match = rquickExpr.exec(selector);\n }\n if (match && (match[1] || !context)) {\n if (match[1]) {\n context = context instanceof jQuery ? context[0] : context;\n jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n for (match in context) {\n if (jQuery.isFunction(this[match])) {\n this[match](context[match]);\n } else {\n this.attr(match, context[match]);\n }\n }\n }\n return this;\n } else {\n elem = document.getElementById(match[2]);\n if (elem && elem.parentNode) {\n if (elem.id !== match[2]) {\n return rootjQuery.find(selector);\n }\n this.length = 1;\n this[0] = elem;\n }\n this.context = document;\n this.selector = selector;\n return this;\n }\n } else if (!context || context.jquery) {\n return (context || rootjQuery).find(selector);\n } else {\n return this.constructor(context).find(selector);\n }\n } else if (selector.nodeType) {\n this.context = this[0] = selector;\n this.length = 1;\n return this;\n } else if (jQuery.isFunction(selector)) {\n return typeof rootjQuery.ready !== \"undefined\" ? rootjQuery.ready(selector) : selector(jQuery);\n }\n if (selector.selector !== undefined) {\n this.selector = selector.selector;\n this.context = selector.context;\n }\n return jQuery.makeArray(selector, this);\n };\n init.prototype = jQuery.fn;\n rootjQuery = jQuery(document);\n var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n guaranteedUnique = {\n children: true,\n contents: true,\n next: true,\n prev: true\n };\n jQuery.extend({\n dir: function(elem, dir, until) {\n var matched = [],\n cur = elem[dir];\n while (cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery(cur).is(until))) {\n if (cur.nodeType === 1) {\n matched.push(cur);\n }\n cur = cur[dir];\n }\n return matched;\n },\n sibling: function(n, elem) {\n var r = [];\n for (; n; n = n.nextSibling) {\n if (n.nodeType === 1 && n !== elem) {\n r.push(n);\n }\n }\n return r;\n }\n });\n jQuery.fn.extend({\n has: function(target) {\n var i, targets = jQuery(target, this),\n len = targets.length;\n return this.filter(function() {\n for (i = 0; i < len; i++) {\n if (jQuery.contains(this, targets[i])) {\n return true;\n }\n }\n });\n },\n closest: function(selectors, context) {\n var cur, i = 0,\n l = this.length,\n matched = [],\n pos = rneedsContext.test(selectors) || typeof selectors !== \"string\" ? jQuery(selectors, context || this.context) : 0;\n for (; i < l; i++) {\n for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n matched.push(cur);\n break;\n }\n }\n }\n return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);\n },\n index: function(elem) {\n if (!elem) {\n return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;\n }\n if (typeof elem === \"string\") {\n return jQuery.inArray(this[0], jQuery(elem));\n }\n return jQuery.inArray(elem.jquery ? elem[0] : elem, this);\n },\n add: function(selector, context) {\n return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));\n },\n addBack: function(selector) {\n return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n }\n });\n\n function sibling(cur, dir) {\n do {\n cur = cur[dir];\n } while (cur && cur.nodeType !== 1);\n return cur;\n }\n jQuery.each({\n parent: function(elem) {\n var parent = elem.parentNode;\n return parent && parent.nodeType !== 11 ? parent : null;\n },\n parents: function(elem) {\n return jQuery.dir(elem, \"parentNode\");\n },\n parentsUntil: function(elem, i, until) {\n return jQuery.dir(elem, \"parentNode\", until);\n },\n next: function(elem) {\n return sibling(elem, \"nextSibling\");\n },\n prev: function(elem) {\n return sibling(elem, \"previousSibling\");\n },\n nextAll: function(elem) {\n return jQuery.dir(elem, \"nextSibling\");\n },\n prevAll: function(elem) {\n return jQuery.dir(elem, \"previousSibling\");\n },\n nextUntil: function(elem, i, until) {\n return jQuery.dir(elem, \"nextSibling\", until);\n },\n prevUntil: function(elem, i, until) {\n return jQuery.dir(elem, \"previousSibling\", until);\n },\n siblings: function(elem) {\n return jQuery.sibling((elem.parentNode || {}).firstChild, elem);\n },\n children: function(elem) {\n return jQuery.sibling(elem.firstChild);\n },\n contents: function(elem) {\n return jQuery.nodeName(elem, \"iframe\") ? elem.contentDocument || elem.contentWindow.document : jQuery.merge([], elem.childNodes);\n }\n }, function(name, fn) {\n jQuery.fn[name] = function(until, selector) {\n var ret = jQuery.map(this, fn, until);\n if (name.slice(-5) !== \"Until\") {\n selector = until;\n }\n if (selector && typeof selector === \"string\") {\n ret = jQuery.filter(selector, ret);\n }\n if (this.length > 1) {\n if (!guaranteedUnique[name]) {\n ret = jQuery.unique(ret);\n }\n if (rparentsprev.test(name)) {\n ret = ret.reverse();\n }\n }\n return this.pushStack(ret);\n };\n });\n var rnotwhite = (/\\S+/g);\n var optionsCache = {};\n\n function createOptions(options) {\n var object = optionsCache[options] = {};\n jQuery.each(options.match(rnotwhite) || [], function(_, flag) {\n object[flag] = true;\n });\n return object;\n }\n jQuery.Callbacks = function(options) {\n options = typeof options === \"string\" ? (optionsCache[options] || createOptions(options)) : jQuery.extend({}, options);\n var firing, memory, fired, firingLength, firingIndex, firingStart, list = [],\n stack = !options.once && [],\n fire = function(data) {\n memory = options.memory && data;\n fired = true;\n firingIndex = firingStart || 0;\n firingStart = 0;\n firingLength = list.length;\n firing = true;\n for (; list && firingIndex < firingLength; firingIndex++) {\n if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\n memory = false;\n break;\n }\n }\n firing = false;\n if (list) {\n if (stack) {\n if (stack.length) {\n fire(stack.shift());\n }\n } else if (memory) {\n list = [];\n } else {\n self.disable();\n }\n }\n },\n self = {\n add: function() {\n if (list) {\n var start = list.length;\n (function add(args) {\n jQuery.each(args, function(_, arg) {\n var type = jQuery.type(arg);\n if (type === \"function\") {\n if (!options.unique || !self.has(arg)) {\n list.push(arg);\n }\n } else if (arg && arg.length && type !== \"string\") {\n add(arg);\n }\n });\n })(arguments);\n if (firing) {\n firingLength = list.length;\n } else if (memory) {\n firingStart = start;\n fire(memory);\n }\n }\n return this;\n },\n remove: function() {\n if (list) {\n jQuery.each(arguments, function(_, arg) {\n var index;\n while ((index = jQuery.inArray(arg, list, index)) > -1) {\n list.splice(index, 1);\n if (firing) {\n if (index <= firingLength) {\n firingLength--;\n }\n if (index <= firingIndex) {\n firingIndex--;\n }\n }\n }\n });\n }\n return this;\n },\n has: function(fn) {\n return fn ? jQuery.inArray(fn, list) > -1 : !! (list && list.length);\n },\n empty: function() {\n list = [];\n firingLength = 0;\n return this;\n },\n disable: function() {\n list = stack = memory = undefined;\n return this;\n },\n disabled: function() {\n return !list;\n },\n lock: function() {\n stack = undefined;\n if (!memory) {\n self.disable();\n }\n return this;\n },\n locked: function() {\n return !stack;\n },\n fireWith: function(context, args) {\n if (list && (!fired || stack)) {\n args = args || [];\n args = [context, args.slice ? args.slice() : args];\n if (firing) {\n stack.push(args);\n } else {\n fire(args);\n }\n }\n return this;\n },\n fire: function() {\n self.fireWith(this, arguments);\n return this;\n },\n fired: function() {\n return !!fired;\n }\n };\n return self;\n };\n jQuery.extend({\n Deferred: function(func) {\n var tuples = [[\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\"], [\"notify\", \"progress\", jQuery.Callbacks(\"memory\")]],\n state = \"pending\",\n promise = {\n state: function() {\n return state;\n },\n always: function() {\n deferred.done(arguments).fail(arguments);\n return this;\n },\n then: function() {\n var fns = arguments;\n return jQuery.Deferred(function(newDefer) {\n jQuery.each(tuples, function(i, tuple) {\n var fn = jQuery.isFunction(fns[i]) && fns[i];\n deferred[tuple[1]](function() {\n var returned = fn && fn.apply(this, arguments);\n if (returned && jQuery.isFunction(returned.promise)) {\n returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n } else {\n newDefer[tuple[0] + \"With\"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n }\n });\n });\n fns = null;\n }).promise();\n },\n promise: function(obj) {\n return obj != null ? jQuery.extend(obj, promise) : promise;\n }\n },\n deferred = {};\n promise.pipe = promise.then;\n jQuery.each(tuples, function(i, tuple) {\n var list = tuple[2],\n stateString = tuple[3];\n promise[tuple[1]] = list.add;\n if (stateString) {\n list.add(function() {\n state = stateString;\n }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n }\n deferred[tuple[0]] = function() {\n deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments);\n return this;\n };\n deferred[tuple[0] + \"With\"] = list.fireWith;\n });\n promise.promise(deferred);\n if (func) {\n func.call(deferred, deferred);\n }\n return deferred;\n },\n when: function(subordinate) {\n var i = 0,\n resolveValues = slice.call(arguments),\n length = resolveValues.length,\n remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,\n deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n updateFunc = function(i, contexts, values) {\n return function(value) {\n contexts[i] = this;\n values[i] = arguments.length > 1 ? slice.call(arguments) : value;\n if (values === progressValues) {\n deferred.notifyWith(contexts, values);\n } else if (!(--remaining)) {\n deferred.resolveWith(contexts, values);\n }\n };\n },\n progressValues, progressContexts, resolveContexts;\n if (length > 1) {\n progressValues = new Array(length);\n progressContexts = new Array(length);\n resolveContexts = new Array(length);\n for (; i < length; i++) {\n if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {\n resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));\n } else {\n --remaining;\n }\n }\n }\n if (!remaining) {\n deferred.resolveWith(resolveContexts, resolveValues);\n }\n return deferred.promise();\n }\n });\n var readyList;\n jQuery.fn.ready = function(fn) {\n jQuery.ready.promise().done(fn);\n return this;\n };\n jQuery.extend({\n isReady: false,\n readyWait: 1,\n holdReady: function(hold) {\n if (hold) {\n jQuery.readyWait++;\n } else {\n jQuery.ready(true);\n }\n },\n ready: function(wait) {\n if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n return;\n }\n if (!document.body) {\n return setTimeout(jQuery.ready);\n }\n jQuery.isReady = true;\n if (wait !== true && --jQuery.readyWait > 0) {\n return;\n }\n readyList.resolveWith(document, [jQuery]);\n if (jQuery.fn.triggerHandler) {\n jQuery(document).triggerHandler(\"ready\");\n jQuery(document).off(\"ready\");\n }\n }\n });\n\n function detach() {\n if (document.addEventListener) {\n document.removeEventListener(\"DOMContentLoaded\", completed, false);\n window.removeEventListener(\"load\", completed, false);\n } else {\n document.detachEvent(\"onreadystatechange\", completed);\n window.detachEvent(\"onload\", completed);\n }\n }\n function completed() {\n if (document.addEventListener || event.type === \"load\" || document.readyState === \"complete\") {\n detach();\n jQuery.ready();\n }\n }\n jQuery.ready.promise = function(obj) {\n if (!readyList) {\n readyList = jQuery.Deferred();\n if (document.readyState === \"complete\") {\n setTimeout(jQuery.ready);\n } else if (document.addEventListener) {\n document.addEventListener(\"DOMContentLoaded\", completed, false);\n window.addEventListener(\"load\", completed, false);\n } else {\n document.attachEvent(\"onreadystatechange\", completed);\n window.attachEvent(\"onload\", completed);\n var top = false;\n try {\n top = window.frameElement == null && document.documentElement;\n } catch (e) {}\n if (top && top.doScroll) {\n (function doScrollCheck() {\n if (!jQuery.isReady) {\n try {\n top.doScroll(\"left\");\n } catch (e) {\n return setTimeout(doScrollCheck, 50);\n }\n detach();\n jQuery.ready();\n }\n })();\n }\n }\n }\n return readyList.promise(obj);\n };\n var strundefined = typeof undefined;\n var i;\n for (i in jQuery(support)) {\n break;;\n }\n support.ownLast = i !== \"0\";\n support.inlineBlockNeedsLayout = false;\n jQuery(function() {\n var val, div, body, container;\n body = document.getElementsByTagName(\"body\")[0];\n if (!body || !body.style) {\n return;\n }\n div = document.createElement(\"div\");\n container = document.createElement(\"div\");\n container.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n body.appendChild(container).appendChild(div);\n if (typeof div.style.zoom !== strundefined) {\n div.style.cssText = \"display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1\";\n support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;\n if (val) {\n body.style.zoom = 1;\n }\n }\n body.removeChild(container);\n });\n (function() {\n var div = document.createElement(\"div\");\n if (support.deleteExpando == null) {\n support.deleteExpando = true;\n try {\n delete div.test;\n } catch (e) {\n support.deleteExpando = false;\n }\n }\n div = null;\n })();\n jQuery.acceptData = function(elem) {\n var noData = jQuery.noData[(elem.nodeName + \" \").toLowerCase()],\n nodeType = +elem.nodeType || 1;\n return nodeType !== 1 && nodeType !== 9 ? false : !noData || noData !== true && elem.getAttribute(\"classid\") === noData;\n };\n var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n rmultiDash = /([A-Z])/g;\n\n function dataAttr(elem, key, data) {\n if (data === undefined && elem.nodeType === 1) {\n var name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\n data = elem.getAttribute(name);\n if (typeof data === \"string\") {\n try {\n data = data === \"true\" ? true : data === \"false\" ? false : data === \"null\" ? null : +data + \"\" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;\n } catch (e) {}\n jQuery.data(elem, key, data);\n } else {\n data = undefined;\n }\n }\n return data;\n }\n function isEmptyDataObject(obj) {\n var name;\n for (name in obj) {\n if (name === \"data\" && jQuery.isEmptyObject(obj[name])) {\n continue;\n }\n if (name !== \"toJSON\") {\n return false;\n }\n }\n return true;\n }\n function internalData(elem, name, data, pvt) {\n if (!jQuery.acceptData(elem)) {\n return;\n }\n var ret, thisCache, internalKey = jQuery.expando,\n isNode = elem.nodeType,\n cache = isNode ? jQuery.cache : elem,\n id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;\n if ((!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === \"string\") {\n return;\n }\n if (!id) {\n if (isNode) {\n id = elem[internalKey] = deletedIds.pop() || jQuery.guid++;\n } else {\n id = internalKey;\n }\n }\n if (!cache[id]) {\n cache[id] = isNode ? {} : {\n toJSON: jQuery.noop\n };\n }\n if (typeof name === \"object\" || typeof name === \"function\") {\n if (pvt) {\n cache[id] = jQuery.extend(cache[id], name);\n } else {\n cache[id].data = jQuery.extend(cache[id].data, name);\n }\n }\n thisCache = cache[id];\n if (!pvt) {\n if (!thisCache.data) {\n thisCache.data = {};\n }\n thisCache = thisCache.data;\n }\n if (data !== undefined) {\n thisCache[jQuery.camelCase(name)] = data;\n }\n if (typeof name === \"string\") {\n ret = thisCache[name];\n if (ret == null) {\n ret = thisCache[jQuery.camelCase(name)];\n }\n } else {\n ret = thisCache;\n }\n return ret;\n }\n function internalRemoveData(elem, name, pvt) {\n if (!jQuery.acceptData(elem)) {\n return;\n }\n var thisCache, i, isNode = elem.nodeType,\n cache = isNode ? jQuery.cache : elem,\n id = isNode ? elem[jQuery.expando] : jQuery.expando;\n if (!cache[id]) {\n return;\n }\n if (name) {\n thisCache = pvt ? cache[id] : cache[id].data;\n if (thisCache) {\n if (!jQuery.isArray(name)) {\n if (name in thisCache) {\n name = [name];\n } else {\n name = jQuery.camelCase(name);\n if (name in thisCache) {\n name = [name];\n } else {\n name = name.split(\" \");\n }\n }\n } else {\n name = name.concat(jQuery.map(name, jQuery.camelCase));\n }\n i = name.length;\n while (i--) {\n delete thisCache[name[i]];\n }\n if (pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache)) {\n return;\n }\n }\n }\n if (!pvt) {\n delete cache[id].data;\n if (!isEmptyDataObject(cache[id])) {\n return;\n }\n }\n if (isNode) {\n jQuery.cleanData([elem], true);\n } else if (support.deleteExpando || cache != cache.window) {\n delete cache[id];\n } else {\n cache[id] = null;\n }\n }\n jQuery.extend({\n cache: {},\n noData: {\n \"applet \": true,\n \"embed \": true,\n \"object \": \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"\n },\n hasData: function(elem) {\n elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando];\n return !!elem && !isEmptyDataObject(elem);\n },\n data: function(elem, name, data) {\n return internalData(elem, name, data);\n },\n removeData: function(elem, name) {\n return internalRemoveData(elem, name);\n },\n _data: function(elem, name, data) {\n return internalData(elem, name, data, true);\n },\n _removeData: function(elem, name) {\n return internalRemoveData(elem, name, true);\n }\n });\n jQuery.fn.extend({\n data: function(key, value) {\n var i, name, data, elem = this[0],\n attrs = elem && elem.attributes;\n if (key === undefined) {\n if (this.length) {\n data = jQuery.data(elem);\n if (elem.nodeType === 1 && !jQuery._data(elem, \"parsedAttrs\")) {\n i = attrs.length;\n while (i--) {\n if (attrs[i]) {\n name = attrs[i].name;\n if (name.indexOf(\"data-\") === 0) {\n name = jQuery.camelCase(name.slice(5));\n dataAttr(elem, name, data[name]);\n }\n }\n }\n jQuery._data(elem, \"parsedAttrs\", true);\n }\n }\n return data;\n }\n if (typeof key === \"object\") {\n return this.each(function() {\n jQuery.data(this, key);\n });\n }\n return arguments.length > 1 ? this.each(function() {\n jQuery.data(this, key, value);\n }) : elem ? dataAttr(elem, key, jQuery.data(elem, key)) : undefined;\n },\n removeData: function(key) {\n return this.each(function() {\n jQuery.removeData(this, key);\n });\n }\n });\n jQuery.extend({\n queue: function(elem, type, data) {\n var queue;\n if (elem) {\n type = (type || \"fx\") + \"queue\";\n queue = jQuery._data(elem, type);\n if (data) {\n if (!queue || jQuery.isArray(data)) {\n queue = jQuery._data(elem, type, jQuery.makeArray(data));\n } else {\n queue.push(data);\n }\n }\n return queue || [];\n }\n },\n dequeue: function(elem, type) {\n type = type || \"fx\";\n var queue = jQuery.queue(elem, type),\n startLength = queue.length,\n fn = queue.shift(),\n hooks = jQuery._queueHooks(elem, type),\n next = function() {\n jQuery.dequeue(elem, type);\n };\n if (fn === \"inprogress\") {\n fn = queue.shift();\n startLength--;\n }\n if (fn) {\n if (type === \"fx\") {\n queue.unshift(\"inprogress\");\n }\n delete hooks.stop;\n fn.call(elem, next, hooks);\n }\n if (!startLength && hooks) {\n hooks.empty.fire();\n }\n },\n _queueHooks: function(elem, type) {\n var key = type + \"queueHooks\";\n return jQuery._data(elem, key) || jQuery._data(elem, key, {\n empty: jQuery.Callbacks(\"once memory\").add(function() {\n jQuery._removeData(elem, type + \"queue\");\n jQuery._removeData(elem, key);\n })\n });\n }\n });\n jQuery.fn.extend({\n queue: function(type, data) {\n var setter = 2;\n if (typeof type !== \"string\") {\n data = type;\n type = \"fx\";\n setter--;\n }\n if (arguments.length < setter) {\n return jQuery.queue(this[0], type);\n }\n return data === undefined ? this : this.each(function() {\n var queue = jQuery.queue(this, type, data);\n jQuery._queueHooks(this, type);\n if (type === \"fx\" && queue[0] !== \"inprogress\") {\n jQuery.dequeue(this, type);\n }\n });\n },\n dequeue: function(type) {\n return this.each(function() {\n jQuery.dequeue(this, type);\n });\n },\n clearQueue: function(type) {\n return this.queue(type || \"fx\", []);\n },\n promise: function(type, obj) {\n var tmp, count = 1,\n defer = jQuery.Deferred(),\n elements = this,\n i = this.length,\n resolve = function() {\n if (!(--count)) {\n defer.resolveWith(elements, [elements]);\n }\n };\n if (typeof type !== \"string\") {\n obj = type;\n type = undefined;\n }\n type = type || \"fx\";\n while (i--) {\n tmp = jQuery._data(elements[i], type + \"queueHooks\");\n if (tmp && tmp.empty) {\n count++;\n tmp.empty.add(resolve);\n }\n }\n resolve();\n return defer.promise(obj);\n }\n });\n var pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n var isHidden = function(elem, el) {\n elem = el || elem;\n return jQuery.css(elem, \"display\") === \"none\" || !jQuery.contains(elem.ownerDocument, elem);\n };\n var access = jQuery.access = function(elems, fn, key, value, chainable, emptyGet, raw) {\n var i = 0,\n length = elems.length,\n bulk = key == null;\n if (jQuery.type(key) === \"object\") {\n chainable = true;\n for (i in key) {\n jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);\n }\n } else if (value !== undefined) {\n chainable = true;\n if (!jQuery.isFunction(value)) {\n raw = true;\n }\n if (bulk) {\n if (raw) {\n fn.call(elems, value);\n fn = null;\n } else {\n bulk = fn;\n fn = function(elem, key, value) {\n return bulk.call(jQuery(elem), value);\n };\n }\n }\n if (fn) {\n for (; i < length; i++) {\n fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n }\n }\n }\n return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet;\n };\n var rcheckableType = (/^(?:checkbox|radio)$/i);\n (function() {\n var input = document.createElement(\"input\"),\n div = document.createElement(\"div\"),\n fragment = document.createDocumentFragment();\n div.innerHTML = \" <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n support.leadingWhitespace = div.firstChild.nodeType === 3;\n support.tbody = !div.getElementsByTagName(\"tbody\").length;\n support.htmlSerialize = !! div.getElementsByTagName(\"link\").length;\n support.html5Clone = document.createElement(\"nav\").cloneNode(true).outerHTML !== \"<:nav></:nav>\";\n input.type = \"checkbox\";\n input.checked = true;\n fragment.appendChild(input);\n support.appendChecked = input.checked;\n div.innerHTML = \"<textarea>x</textarea>\";\n support.noCloneChecked = !! div.cloneNode(true).lastChild.defaultValue;\n fragment.appendChild(div);\n div.innerHTML = \"<input type='radio' checked='checked' name='t'/>\";\n support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n support.noCloneEvent = true;\n if (div.attachEvent) {\n div.attachEvent(\"onclick\", function() {\n support.noCloneEvent = false;\n });\n div.cloneNode(true).click();\n }\n if (support.deleteExpando == null) {\n support.deleteExpando = true;\n try {\n delete div.test;\n } catch (e) {\n support.deleteExpando = false;\n }\n }\n })();\n (function() {\n var i, eventName, div = document.createElement(\"div\");\n for (i in {\n submit: true,\n change: true,\n focusin: true\n }) {\n eventName = \"on\" + i;\n if (!(support[i + \"Bubbles\"] = eventName in window)) {\n div.setAttribute(eventName, \"t\");\n support[i + \"Bubbles\"] = div.attributes[eventName].expando === false;\n }\n }\n div = null;\n })();\n var rformElems = /^(?:input|select|textarea)$/i,\n rkeyEvent = /^key/,\n rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n rtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\n function returnTrue() {\n return true;\n }\n function returnFalse() {\n return false;\n }\n function safeActiveElement() {\n try {\n return document.activeElement;\n } catch (err) {}\n }\n jQuery.event = {\n global: {},\n add: function(elem, types, handler, data, selector) {\n var tmp, events, t, handleObjIn, special, eventHandle, handleObj, handlers, type, namespaces, origType, elemData = jQuery._data(elem);\n if (!elemData) {\n return;\n }\n if (handler.handler) {\n handleObjIn = handler;\n handler = handleObjIn.handler;\n selector = handleObjIn.selector;\n }\n if (!handler.guid) {\n handler.guid = jQuery.guid++;\n }\n if (!(events = elemData.events)) {\n events = elemData.events = {};\n }\n if (!(eventHandle = elemData.handle)) {\n eventHandle = elemData.handle = function(e) {\n return typeof jQuery !== strundefined && (!e || jQuery.event.triggered !== e.type) ? jQuery.event.dispatch.apply(eventHandle.elem, arguments) : undefined;\n };\n eventHandle.elem = elem;\n }\n types = (types || \"\").match(rnotwhite) || [\"\"];\n t = types.length;\n while (t--) {\n tmp = rtypenamespace.exec(types[t]) || [];\n type = origType = tmp[1];\n namespaces = (tmp[2] || \"\").split(\".\").sort();\n if (!type) {\n continue;\n }\n special = jQuery.event.special[type] || {};\n type = (selector ? special.delegateType : special.bindType) || type;\n special = jQuery.event.special[type] || {};\n handleObj = jQuery.extend({\n type: type,\n origType: origType,\n data: data,\n handler: handler,\n guid: handler.guid,\n selector: selector,\n needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n namespace: namespaces.join(\".\")\n }, handleObjIn);\n if (!(handlers = events[type])) {\n handlers = events[type] = [];\n handlers.delegateCount = 0;\n if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n if (elem.addEventListener) {\n elem.addEventListener(type, eventHandle, false);\n } else if (elem.attachEvent) {\n elem.attachEvent(\"on\" + type, eventHandle);\n }\n }\n }\n if (special.add) {\n special.add.call(elem, handleObj);\n if (!handleObj.handler.guid) {\n handleObj.handler.guid = handler.guid;\n }\n }\n if (selector) {\n handlers.splice(handlers.delegateCount++, 0, handleObj);\n } else {\n handlers.push(handleObj);\n }\n jQuery.event.global[type] = true;\n }\n elem = null;\n },\n remove: function(elem, types, handler, selector, mappedTypes) {\n var j, handleObj, tmp, origCount, t, events, special, handlers, type, namespaces, origType, elemData = jQuery.hasData(elem) && jQuery._data(elem);\n if (!elemData || !(events = elemData.events)) {\n return;\n }\n types = (types || \"\").match(rnotwhite) || [\"\"];\n t = types.length;\n while (t--) {\n tmp = rtypenamespace.exec(types[t]) || [];\n type = origType = tmp[1];\n namespaces = (tmp[2] || \"\").split(\".\").sort();\n if (!type) {\n for (type in events) {\n jQuery.event.remove(elem, type + types[t], handler, selector, true);\n }\n continue;\n }\n special = jQuery.event.special[type] || {};\n type = (selector ? special.delegateType : special.bindType) || type;\n handlers = events[type] || [];\n tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\");\n origCount = j = handlers.length;\n while (j--) {\n handleObj = handlers[j];\n if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n handlers.splice(j, 1);\n if (handleObj.selector) {\n handlers.delegateCount--;\n }\n if (special.remove) {\n special.remove.call(elem, handleObj);\n }\n }\n }\n if (origCount && !handlers.length) {\n if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n jQuery.removeEvent(elem, type, elemData.handle);\n }\n delete events[type];\n }\n }\n if (jQuery.isEmptyObject(events)) {\n delete elemData.handle;\n jQuery._removeData(elem, \"events\");\n }\n },\n trigger: function(event, data, elem, onlyHandlers) {\n var handle, ontype, cur, bubbleType, special, tmp, i, eventPath = [elem || document],\n type = hasOwn.call(event, \"type\") ? event.type : event,\n namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n cur = tmp = elem = elem || document;\n if (elem.nodeType === 3 || elem.nodeType === 8) {\n return;\n }\n if (rfocusMorph.test(type + jQuery.event.triggered)) {\n return;\n }\n if (type.indexOf(\".\") >= 0) {\n namespaces = type.split(\".\");\n type = namespaces.shift();\n namespaces.sort();\n }\n ontype = type.indexOf(\":\") < 0 && \"on\" + type;\n event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event);\n event.isTrigger = onlyHandlers ? 2 : 3;\n event.namespace = namespaces.join(\".\");\n event.namespace_re = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n event.result = undefined;\n if (!event.target) {\n event.target = elem;\n }\n data = data == null ? [event] : jQuery.makeArray(data, [event]);\n special = jQuery.event.special[type] || {};\n if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n return;\n }\n if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n bubbleType = special.delegateType || type;\n if (!rfocusMorph.test(bubbleType + type)) {\n cur = cur.parentNode;\n }\n for (; cur; cur = cur.parentNode) {\n eventPath.push(cur);\n tmp = cur;\n }\n if (tmp === (elem.ownerDocument || document)) {\n eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n }\n }\n i = 0;\n while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n event.type = i > 1 ? bubbleType : special.bindType || type;\n handle = (jQuery._data(cur, \"events\") || {})[event.type] && jQuery._data(cur, \"handle\");\n if (handle) {\n handle.apply(cur, data);\n }\n handle = ontype && cur[ontype];\n if (handle && handle.apply && jQuery.acceptData(cur)) {\n event.result = handle.apply(cur, data);\n if (event.result === false) {\n event.preventDefault();\n }\n }\n }\n event.type = type;\n if (!onlyHandlers && !event.isDefaultPrevented()) {\n if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {\n if (ontype && elem[type] && !jQuery.isWindow(elem)) {\n tmp = elem[ontype];\n if (tmp) {\n elem[ontype] = null;\n }\n jQuery.event.triggered = type;\n try {\n elem[type]();\n } catch (e) {}\n jQuery.event.triggered = undefined;\n if (tmp) {\n elem[ontype] = tmp;\n }\n }\n }\n }\n return event.result;\n },\n dispatch: function(event) {\n event = jQuery.event.fix(event);\n var i, ret, handleObj, matched, j, handlerQueue = [],\n args = slice.call(arguments),\n handlers = (jQuery._data(this, \"events\") || {})[event.type] || [],\n special = jQuery.event.special[event.type] || {};\n args[0] = event;\n event.delegateTarget = this;\n if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n return;\n }\n handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n i = 0;\n while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n event.currentTarget = matched.elem;\n j = 0;\n while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {\n event.handleObj = handleObj;\n event.data = handleObj.data;\n ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n if (ret !== undefined) {\n if ((event.result = ret) === false) {\n event.preventDefault();\n event.stopPropagation();\n }\n }\n }\n }\n }\n if (special.postDispatch) {\n special.postDispatch.call(this, event);\n }\n return event.result;\n },\n handlers: function(event, handlers) {\n var sel, handleObj, matches, i, handlerQueue = [],\n delegateCount = handlers.delegateCount,\n cur = event.target;\n if (delegateCount && cur.nodeType && (!event.button || event.type !== \"click\")) {\n for (; cur != this; cur = cur.parentNode || this) {\n if (cur.nodeType === 1 && (cur.disabled !== true || event.type !== \"click\")) {\n matches = [];\n for (i = 0; i < delegateCount; i++) {\n handleObj = handlers[i];\n sel = handleObj.selector + \" \";\n if (matches[sel] === undefined) {\n matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;\n }\n if (matches[sel]) {\n matches.push(handleObj);\n }\n }\n if (matches.length) {\n handlerQueue.push({\n elem: cur,\n handlers: matches\n });\n }\n }\n }\n }\n if (delegateCount < handlers.length) {\n handlerQueue.push({\n elem: this,\n handlers: handlers.slice(delegateCount)\n });\n }\n return handlerQueue;\n },\n fix: function(event) {\n if (event[jQuery.expando]) {\n return event;\n }\n var i, prop, copy, type = event.type,\n originalEvent = event,\n fixHook = this.fixHooks[type];\n if (!fixHook) {\n this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};\n }\n copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n event = new jQuery.Event(originalEvent);\n i = copy.length;\n while (i--) {\n prop = copy[i];\n event[prop] = originalEvent[prop];\n }\n if (!event.target) {\n event.target = originalEvent.srcElement || document;\n }\n if (event.target.nodeType === 3) {\n event.target = event.target.parentNode;\n }\n event.metaKey = !! event.metaKey;\n return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\n },\n props: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n fixHooks: {},\n keyHooks: {\n props: \"char charCode key keyCode\".split(\" \"),\n filter: function(event, original) {\n if (event.which == null) {\n event.which = original.charCode != null ? original.charCode : original.keyCode;\n }\n return event;\n }\n },\n mouseHooks: {\n props: \"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n filter: function(event, original) {\n var body, eventDoc, doc, button = original.button,\n fromElement = original.fromElement;\n if (event.pageX == null && original.clientX != null) {\n eventDoc = event.target.ownerDocument || document;\n doc = eventDoc.documentElement;\n body = eventDoc.body;\n event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n }\n if (!event.relatedTarget && fromElement) {\n event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;\n }\n if (!event.which && button !== undefined) {\n event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n }\n return event;\n }\n },\n special: {\n load: {\n noBubble: true\n },\n focus: {\n trigger: function() {\n if (this !== safeActiveElement() && this.focus) {\n try {\n this.focus();\n return false;\n } catch (e) {}\n }\n },\n delegateType: \"focusin\"\n },\n blur: {\n trigger: function() {\n if (this === safeActiveElement() && this.blur) {\n this.blur();\n return false;\n }\n },\n delegateType: \"focusout\"\n },\n click: {\n trigger: function() {\n if (jQuery.nodeName(this, \"input\") && this.type === \"checkbox\" && this.click) {\n this.click();\n return false;\n }\n },\n _default: function(event) {\n return jQuery.nodeName(event.target, \"a\");\n }\n },\n beforeunload: {\n postDispatch: function(event) {\n if (event.result !== undefined && event.originalEvent) {\n event.originalEvent.returnValue = event.result;\n }\n }\n }\n },\n simulate: function(type, elem, event, bubble) {\n var e = jQuery.extend(new jQuery.Event(), event, {\n type: type,\n isSimulated: true,\n originalEvent: {}\n });\n if (bubble) {\n jQuery.event.trigger(e, null, elem);\n } else {\n jQuery.event.dispatch.call(elem, e);\n }\n if (e.isDefaultPrevented()) {\n event.preventDefault();\n }\n }\n };\n jQuery.removeEvent = document.removeEventListener ?\n function(elem, type, handle) {\n if (elem.removeEventListener) {\n elem.removeEventListener(type, handle, false);\n }\n } : function(elem, type, handle) {\n var name = \"on\" + type;\n if (elem.detachEvent) {\n if (typeof elem[name] === strundefined) {\n elem[name] = null;\n }\n elem.detachEvent(name, handle);\n }\n };\n jQuery.Event = function(src, props) {\n if (!(this instanceof jQuery.Event)) {\n return new jQuery.Event(src, props);\n }\n if (src && src.type) {\n this.originalEvent = src;\n this.type = src.type;\n this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;\n } else {\n this.type = src;\n }\n if (props) {\n jQuery.extend(this, props);\n }\n this.timeStamp = src && src.timeStamp || jQuery.now();\n this[jQuery.expando] = true;\n };\n jQuery.Event.prototype = {\n isDefaultPrevented: returnFalse,\n isPropagationStopped: returnFalse,\n isImmediatePropagationStopped: returnFalse,\n preventDefault: function() {\n var e = this.originalEvent;\n this.isDefaultPrevented = returnTrue;\n if (!e) {\n return;\n }\n if (e.preventDefault) {\n e.preventDefault();\n } else {\n e.returnValue = false;\n }\n },\n stopPropagation: function() {\n var e = this.originalEvent;\n this.isPropagationStopped = returnTrue;\n if (!e) {\n return;\n }\n if (e.stopPropagation) {\n e.stopPropagation();\n }\n e.cancelBubble = true;\n },\n stopImmediatePropagation: function() {\n var e = this.originalEvent;\n this.isImmediatePropagationStopped = returnTrue;\n if (e && e.stopImmediatePropagation) {\n e.stopImmediatePropagation();\n }\n this.stopPropagation();\n }\n };\n jQuery.each({\n mouseenter: \"mouseover\",\n mouseleave: \"mouseout\",\n pointerenter: \"pointerover\",\n pointerleave: \"pointerout\"\n }, function(orig, fix) {\n jQuery.event.special[orig] = {\n delegateType: fix,\n bindType: fix,\n handle: function(event) {\n var ret, target = this,\n related = event.relatedTarget,\n handleObj = event.handleObj;\n if (!related || (related !== target && !jQuery.contains(target, related))) {\n event.type = handleObj.origType;\n ret = handleObj.handler.apply(this, arguments);\n event.type = fix;\n }\n return ret;\n }\n };\n });\n if (!support.submitBubbles) {\n jQuery.event.special.submit = {\n setup: function() {\n if (jQuery.nodeName(this, \"form\")) {\n return false;\n }\n jQuery.event.add(this, \"click._submit keypress._submit\", function(e) {\n var elem = e.target,\n form = jQuery.nodeName(elem, \"input\") || jQuery.nodeName(elem, \"button\") ? elem.form : undefined;\n if (form && !jQuery._data(form, \"submitBubbles\")) {\n jQuery.event.add(form, \"submit._submit\", function(event) {\n event._submit_bubble = true;\n });\n jQuery._data(form, \"submitBubbles\", true);\n }\n });\n },\n postDispatch: function(event) {\n if (event._submit_bubble) {\n delete event._submit_bubble;\n if (this.parentNode && !event.isTrigger) {\n jQuery.event.simulate(\"submit\", this.parentNode, event, true);\n }\n }\n },\n teardown: function() {\n if (jQuery.nodeName(this, \"form\")) {\n return false;\n }\n jQuery.event.remove(this, \"._submit\");\n }\n };\n }\n if (!support.changeBubbles) {\n jQuery.event.special.change = {\n setup: function() {\n if (rformElems.test(this.nodeName)) {\n if (this.type === \"checkbox\" || this.type === \"radio\") {\n jQuery.event.add(this, \"propertychange._change\", function(event) {\n if (event.originalEvent.propertyName === \"checked\") {\n this._just_changed = true;\n }\n });\n jQuery.event.add(this, \"click._change\", function(event) {\n if (this._just_changed && !event.isTrigger) {\n this._just_changed = false;\n }\n jQuery.event.simulate(\"change\", this, event, true);\n });\n }\n return false;\n }\n jQuery.event.add(this, \"beforeactivate._change\", function(e) {\n var elem = e.target;\n if (rformElems.test(elem.nodeName) && !jQuery._data(elem, \"changeBubbles\")) {\n jQuery.event.add(elem, \"change._change\", function(event) {\n if (this.parentNode && !event.isSimulated && !event.isTrigger) {\n jQuery.event.simulate(\"change\", this.parentNode, event, true);\n }\n });\n jQuery._data(elem, \"changeBubbles\", true);\n }\n });\n },\n handle: function(event) {\n var elem = event.target;\n if (this !== elem || event.isSimulated || event.isTrigger || (elem.type !== \"radio\" && elem.type !== \"checkbox\")) {\n return event.handleObj.handler.apply(this, arguments);\n }\n },\n teardown: function() {\n jQuery.event.remove(this, \"._change\");\n return !rformElems.test(this.nodeName);\n }\n };\n }\n if (!support.focusinBubbles) {\n jQuery.each({\n focus: \"focusin\",\n blur: \"focusout\"\n }, function(orig, fix) {\n var handler = function(event) {\n jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\n };\n jQuery.event.special[fix] = {\n setup: function() {\n var doc = this.ownerDocument || this,\n attaches = jQuery._data(doc, fix);\n if (!attaches) {\n doc.addEventListener(orig, handler, true);\n }\n jQuery._data(doc, fix, (attaches || 0) + 1);\n },\n teardown: function() {\n var doc = this.ownerDocument || this,\n attaches = jQuery._data(doc, fix) - 1;\n if (!attaches) {\n doc.removeEventListener(orig, handler, true);\n jQuery._removeData(doc, fix);\n } else {\n jQuery._data(doc, fix, attaches);\n }\n }\n };\n });\n }\n jQuery.fn.extend({\n on: function(types, selector, data, fn, one) {\n var type, origFn;\n if (typeof types === \"object\") {\n if (typeof selector !== \"string\") {\n data = data || selector;\n selector = undefined;\n }\n for (type in types) {\n this.on(type, selector, data, types[type], one);\n }\n return this;\n }\n if (data == null && fn == null) {\n fn = selector;\n data = selector = undefined;\n } else if (fn == null) {\n if (typeof selector === \"string\") {\n fn = data;\n data = undefined;\n } else {\n fn = data;\n data = selector;\n selector = undefined;\n }\n }\n if (fn === false) {\n fn = returnFalse;\n } else if (!fn) {\n return this;\n }\n if (one === 1) {\n origFn = fn;\n fn = function(event) {\n jQuery().off(event);\n return origFn.apply(this, arguments);\n };\n fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n }\n return this.each(function() {\n jQuery.event.add(this, types, fn, data, selector);\n });\n },\n one: function(types, selector, data, fn) {\n return this.on(types, selector, data, fn, 1);\n },\n off: function(types, selector, fn) {\n var handleObj, type;\n if (types && types.preventDefault && types.handleObj) {\n handleObj = types.handleObj;\n jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n return this;\n }\n if (typeof types === \"object\") {\n for (type in types) {\n this.off(type, selector, types[type]);\n }\n return this;\n }\n if (selector === false || typeof selector === \"function\") {\n fn = selector;\n selector = undefined;\n }\n if (fn === false) {\n fn = returnFalse;\n }\n return this.each(function() {\n jQuery.event.remove(this, types, fn, selector);\n });\n },\n trigger: function(type, data) {\n return this.each(function() {\n jQuery.event.trigger(type, data, this);\n });\n },\n triggerHandler: function(type, data) {\n var elem = this[0];\n if (elem) {\n return jQuery.event.trigger(type, data, elem, true);\n }\n }\n });\n\n function createSafeFragment(document) {\n var list = nodeNames.split(\"|\"),\n safeFrag = document.createDocumentFragment();\n if (safeFrag.createElement) {\n while (list.length) {\n safeFrag.createElement(list.pop());\n }\n }\n return safeFrag;\n }\n var nodeNames = \"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|\" + \"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",\n rinlinejQuery = / jQuery\\d+=\"(?:null|\\d+)\"/g,\n rnoshimcache = new RegExp(\"<(?:\" + nodeNames + \")[\\\\s/>]\", \"i\"),\n rleadingWhitespace = /^\\s+/,\n rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n rtagName = /<([\\w:]+)/,\n rtbody = /<tbody/i,\n rhtml = /<|&#?\\w+;/,\n rnoInnerhtml = /<(?:script|style|link)/i,\n rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n rscriptType = /^$|\\/(?:java|ecma)script/i,\n rscriptTypeMasked = /^true\\/(.*)/,\n rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n wrapMap = {\n option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n legend: [1, \"<fieldset>\", \"</fieldset>\"],\n area: [1, \"<map>\", \"</map>\"],\n param: [1, \"<object>\", \"</object>\"],\n thead: [1, \"<table>\", \"</table>\"],\n tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n col: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\n td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n _default: support.htmlSerialize ? [0, \"\", \"\"] : [1, \"X<div>\", \"</div>\"]\n },\n safeFragment = createSafeFragment(document),\n fragmentDiv = safeFragment.appendChild(document.createElement(\"div\"));\n wrapMap.optgroup = wrapMap.option;\n wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n wrapMap.th = wrapMap.td;\n\n function getAll(context, tag) {\n var elems, elem, i = 0,\n found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName(tag || \"*\") : typeof context.querySelectorAll !== strundefined ? context.querySelectorAll(tag || \"*\") : undefined;\n if (!found) {\n for (found = [], elems = context.childNodes || context;\n (elem = elems[i]) != null; i++) {\n if (!tag || jQuery.nodeName(elem, tag)) {\n found.push(elem);\n } else {\n jQuery.merge(found, getAll(elem, tag));\n }\n }\n }\n return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], found) : found;\n }\n function fixDefaultChecked(elem) {\n if (rcheckableType.test(elem.type)) {\n elem.defaultChecked = elem.checked;\n }\n }\n function manipulationTarget(elem, content) {\n return jQuery.nodeName(elem, \"table\") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\") ? elem.getElementsByTagName(\"tbody\")[0] || elem.appendChild(elem.ownerDocument.createElement(\"tbody\")) : elem;\n }\n function disableScript(elem) {\n elem.type = (jQuery.find.attr(elem, \"type\") !== null) + \"/\" + elem.type;\n return elem;\n }\n function restoreScript(elem) {\n var match = rscriptTypeMasked.exec(elem.type);\n if (match) {\n elem.type = match[1];\n } else {\n elem.removeAttribute(\"type\");\n }\n return elem;\n }\n function setGlobalEval(elems, refElements) {\n var elem, i = 0;\n for (;\n (elem = elems[i]) != null; i++) {\n jQuery._data(elem, \"globalEval\", !refElements || jQuery._data(refElements[i], \"globalEval\"));\n }\n }\n function cloneCopyEvent(src, dest) {\n if (dest.nodeType !== 1 || !jQuery.hasData(src)) {\n return;\n }\n var type, i, l, oldData = jQuery._data(src),\n curData = jQuery._data(dest, oldData),\n events = oldData.events;\n if (events) {\n delete curData.handle;\n curData.events = {};\n for (type in events) {\n for (i = 0, l = events[type].length; i < l; i++) {\n jQuery.event.add(dest, type, events[type][i]);\n }\n }\n }\n if (curData.data) {\n curData.data = jQuery.extend({}, curData.data);\n }\n }\n function fixCloneNodeIssues(src, dest) {\n var nodeName, e, data;\n if (dest.nodeType !== 1) {\n return;\n }\n nodeName = dest.nodeName.toLowerCase();\n if (!support.noCloneEvent && dest[jQuery.expando]) {\n data = jQuery._data(dest);\n for (e in data.events) {\n jQuery.removeEvent(dest, e, data.handle);\n }\n dest.removeAttribute(jQuery.expando);\n }\n if (nodeName === \"script\" && dest.text !== src.text) {\n disableScript(dest).text = src.text;\n restoreScript(dest);\n } else if (nodeName === \"object\") {\n if (dest.parentNode) {\n dest.outerHTML = src.outerHTML;\n }\n if (support.html5Clone && (src.innerHTML && !jQuery.trim(dest.innerHTML))) {\n dest.innerHTML = src.innerHTML;\n }\n } else if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n dest.defaultChecked = dest.checked = src.checked;\n if (dest.value !== src.value) {\n dest.value = src.value;\n }\n } else if (nodeName === \"option\") {\n dest.defaultSelected = dest.selected = src.defaultSelected;\n } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n dest.defaultValue = src.defaultValue;\n }\n }\n jQuery.extend({\n clone: function(elem, dataAndEvents, deepDataAndEvents) {\n var destElements, node, clone, i, srcElements, inPage = jQuery.contains(elem.ownerDocument, elem);\n if (support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test(\"<\" + elem.nodeName + \">\")) {\n clone = elem.cloneNode(true);\n } else {\n fragmentDiv.innerHTML = elem.outerHTML;\n fragmentDiv.removeChild(clone = fragmentDiv.firstChild);\n }\n if ((!support.noCloneEvent || !support.noCloneChecked) && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n destElements = getAll(clone);\n srcElements = getAll(elem);\n for (i = 0;\n (node = srcElements[i]) != null; ++i) {\n if (destElements[i]) {\n fixCloneNodeIssues(node, destElements[i]);\n }\n }\n }\n if (dataAndEvents) {\n if (deepDataAndEvents) {\n srcElements = srcElements || getAll(elem);\n destElements = destElements || getAll(clone);\n for (i = 0;\n (node = srcElements[i]) != null; i++) {\n cloneCopyEvent(node, destElements[i]);\n }\n } else {\n cloneCopyEvent(elem, clone);\n }\n }\n destElements = getAll(clone, \"script\");\n if (destElements.length > 0) {\n setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n }\n destElements = srcElements = node = null;\n return clone;\n },\n buildFragment: function(elems, context, scripts, selection) {\n var j, elem, contains, tmp, tag, tbody, wrap, l = elems.length,\n safe = createSafeFragment(context),\n nodes = [],\n i = 0;\n for (; i < l; i++) {\n elem = elems[i];\n if (elem || elem === 0) {\n if (jQuery.type(elem) === \"object\") {\n jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\n } else if (!rhtml.test(elem)) {\n nodes.push(context.createTextNode(elem));\n } else {\n tmp = tmp || safe.appendChild(context.createElement(\"div\"));\n tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n wrap = wrapMap[tag] || wrapMap._default;\n tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, \"<$1></$2>\") + wrap[2];\n j = wrap[0];\n while (j--) {\n tmp = tmp.lastChild;\n }\n if (!support.leadingWhitespace && rleadingWhitespace.test(elem)) {\n nodes.push(context.createTextNode(rleadingWhitespace.exec(elem)[0]));\n }\n if (!support.tbody) {\n elem = tag === \"table\" && !rtbody.test(elem) ? tmp.firstChild : wrap[1] === \"<table>\" && !rtbody.test(elem) ? tmp : 0;\n j = elem && elem.childNodes.length;\n while (j--) {\n if (jQuery.nodeName((tbody = elem.childNodes[j]), \"tbody\") && !tbody.childNodes.length) {\n elem.removeChild(tbody);\n }\n }\n }\n jQuery.merge(nodes, tmp.childNodes);\n tmp.textContent = \"\";\n while (tmp.firstChild) {\n tmp.removeChild(tmp.firstChild);\n }\n tmp = safe.lastChild;\n }\n }\n }\n if (tmp) {\n safe.removeChild(tmp);\n }\n if (!support.appendChecked) {\n jQuery.grep(getAll(nodes, \"input\"), fixDefaultChecked);\n }\n i = 0;\n while ((elem = nodes[i++])) {\n if (selection && jQuery.inArray(elem, selection) !== -1) {\n continue;\n }\n contains = jQuery.contains(elem.ownerDocument, elem);\n tmp = getAll(safe.appendChild(elem), \"script\");\n if (contains) {\n setGlobalEval(tmp);\n }\n if (scripts) {\n j = 0;\n while ((elem = tmp[j++])) {\n if (rscriptType.test(elem.type || \"\")) {\n scripts.push(elem);\n }\n }\n }\n }\n tmp = null;\n return safe;\n },\n cleanData: function(elems, acceptData) {\n var elem, type, id, data, i = 0,\n internalKey = jQuery.expando,\n cache = jQuery.cache,\n deleteExpando = support.deleteExpando,\n special = jQuery.event.special;\n for (;\n (elem = elems[i]) != null; i++) {\n if (acceptData || jQuery.acceptData(elem)) {\n id = elem[internalKey];\n data = id && cache[id];\n if (data) {\n if (data.events) {\n for (type in data.events) {\n if (special[type]) {\n jQuery.event.remove(elem, type);\n } else {\n jQuery.removeEvent(elem, type, data.handle);\n }\n }\n }\n if (cache[id]) {\n delete cache[id];\n if (deleteExpando) {\n delete elem[internalKey];\n } else if (typeof elem.removeAttribute !== strundefined) {\n elem.removeAttribute(internalKey);\n } else {\n elem[internalKey] = null;\n }\n deletedIds.push(id);\n }\n }\n }\n }\n }\n });\n jQuery.fn.extend({\n text: function(value) {\n return access(this, function(value) {\n return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));\n }, null, value, arguments.length);\n },\n append: function() {\n return this.domManip(arguments, function(elem) {\n if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n var target = manipulationTarget(this, elem);\n target.appendChild(elem);\n }\n });\n },\n prepend: function() {\n return this.domManip(arguments, function(elem) {\n if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n var target = manipulationTarget(this, elem);\n target.insertBefore(elem, target.firstChild);\n }\n });\n },\n before: function() {\n return this.domManip(arguments, function(elem) {\n if (this.parentNode) {\n this.parentNode.insertBefore(elem, this);\n }\n });\n },\n after: function() {\n return this.domManip(arguments, function(elem) {\n if (this.parentNode) {\n this.parentNode.insertBefore(elem, this.nextSibling);\n }\n });\n },\n remove: function(selector, keepData) {\n var elem, elems = selector ? jQuery.filter(selector, this) : this,\n i = 0;\n for (;\n (elem = elems[i]) != null; i++) {\n if (!keepData && elem.nodeType === 1) {\n jQuery.cleanData(getAll(elem));\n }\n if (elem.parentNode) {\n if (keepData && jQuery.contains(elem.ownerDocument, elem)) {\n setGlobalEval(getAll(elem, \"script\"));\n }\n elem.parentNode.removeChild(elem);\n }\n }\n return this;\n },\n empty: function() {\n var elem, i = 0;\n for (;\n (elem = this[i]) != null; i++) {\n if (elem.nodeType === 1) {\n jQuery.cleanData(getAll(elem, false));\n }\n while (elem.firstChild) {\n elem.removeChild(elem.firstChild);\n }\n if (elem.options && jQuery.nodeName(elem, \"select\")) {\n elem.options.length = 0;\n }\n }\n return this;\n },\n clone: function(dataAndEvents, deepDataAndEvents) {\n dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n return this.map(function() {\n return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n });\n },\n html: function(value) {\n return access(this, function(value) {\n var elem = this[0] || {},\n i = 0,\n l = this.length;\n if (value === undefined) {\n return elem.nodeType === 1 ? elem.innerHTML.replace(rinlinejQuery, \"\") : undefined;\n }\n if (typeof value === \"string\" && !rnoInnerhtml.test(value) && (support.htmlSerialize || !rnoshimcache.test(value)) && (support.leadingWhitespace || !rleadingWhitespace.test(value)) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n value = value.replace(rxhtmlTag, \"<$1></$2>\");\n try {\n for (; i < l; i++) {\n elem = this[i] || {};\n if (elem.nodeType === 1) {\n jQuery.cleanData(getAll(elem, false));\n elem.innerHTML = value;\n }\n }\n elem = 0;\n } catch (e) {}\n }\n if (elem) {\n this.empty().append(value);\n }\n }, null, value, arguments.length);\n },\n replaceWith: function() {\n var arg = arguments[0];\n this.domManip(arguments, function(elem) {\n arg = this.parentNode;\n jQuery.cleanData(getAll(this));\n if (arg) {\n arg.replaceChild(elem, this);\n }\n });\n return arg && (arg.length || arg.nodeType) ? this : this.remove();\n },\n detach: function(selector) {\n return this.remove(selector, true);\n },\n domManip: function(args, callback) {\n args = concat.apply([], args);\n var first, node, hasScripts, scripts, doc, fragment, i = 0,\n l = this.length,\n set = this,\n iNoClone = l - 1,\n value = args[0],\n isFunction = jQuery.isFunction(value);\n if (isFunction || (l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value))) {\n return this.each(function(index) {\n var self = set.eq(index);\n if (isFunction) {\n args[0] = value.call(this, index, self.html());\n }\n self.domManip(args, callback);\n });\n }\n if (l) {\n fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);\n first = fragment.firstChild;\n if (fragment.childNodes.length === 1) {\n fragment = first;\n }\n if (first) {\n scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n hasScripts = scripts.length;\n for (; i < l; i++) {\n node = fragment;\n if (i !== iNoClone) {\n node = jQuery.clone(node, true, true);\n if (hasScripts) {\n jQuery.merge(scripts, getAll(node, \"script\"));\n }\n }\n callback.call(this[i], node, i);\n }\n if (hasScripts) {\n doc = scripts[scripts.length - 1].ownerDocument;\n jQuery.map(scripts, restoreScript);\n for (i = 0; i < hasScripts; i++) {\n node = scripts[i];\n if (rscriptType.test(node.type || \"\") && !jQuery._data(node, \"globalEval\") && jQuery.contains(doc, node)) {\n if (node.src) {\n if (jQuery._evalUrl) {\n jQuery._evalUrl(node.src);\n }\n } else {\n jQuery.globalEval((node.text || node.textContent || node.innerHTML || \"\").replace(rcleanScript, \"\"));\n }\n }\n }\n }\n fragment = first = null;\n }\n }\n return this;\n }\n });\n jQuery.each({\n appendTo: \"append\",\n prependTo: \"prepend\",\n insertBefore: \"before\",\n insertAfter: \"after\",\n replaceAll: \"replaceWith\"\n }, function(name, original) {\n jQuery.fn[name] = function(selector) {\n var elems, i = 0,\n ret = [],\n insert = jQuery(selector),\n last = insert.length - 1;\n for (; i <= last; i++) {\n elems = i === last ? this : this.clone(true);\n jQuery(insert[i])[original](elems);\n push.apply(ret, elems.get());\n }\n return this.pushStack(ret);\n };\n });\n var iframe, elemdisplay = {};\n\n function actualDisplay(name, doc) {\n var style, elem = jQuery(doc.createElement(name)).appendTo(doc.body),\n display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], \"display\");\n elem.detach();\n return display;\n }\n function defaultDisplay(nodeName) {\n var doc = document,\n display = elemdisplay[nodeName];\n if (!display) {\n display = actualDisplay(nodeName, doc);\n if (display === \"none\" || !display) {\n iframe = (iframe || jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement);\n doc = (iframe[0].contentWindow || iframe[0].contentDocument).document;\n doc.write();\n doc.close();\n display = actualDisplay(nodeName, doc);\n iframe.detach();\n }\n elemdisplay[nodeName] = display;\n }\n return display;\n }(function() {\n var shrinkWrapBlocksVal;\n support.shrinkWrapBlocks = function() {\n if (shrinkWrapBlocksVal != null) {\n return shrinkWrapBlocksVal;\n }\n shrinkWrapBlocksVal = false;\n var div, body, container;\n body = document.getElementsByTagName(\"body\")[0];\n if (!body || !body.style) {\n return;\n }\n div = document.createElement(\"div\");\n container = document.createElement(\"div\");\n container.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n body.appendChild(container).appendChild(div);\n if (typeof div.style.zoom !== strundefined) {\n div.style.cssText = \"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" + \"box-sizing:content-box;display:block;margin:0;border:0;\" + \"padding:1px;width:1px;zoom:1\";\n div.appendChild(document.createElement(\"div\")).style.width = \"5px\";\n shrinkWrapBlocksVal = div.offsetWidth !== 3;\n }\n body.removeChild(container);\n return shrinkWrapBlocksVal;\n };\n })();\n var rmargin = (/^margin/);\n var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n var getStyles, curCSS, rposition = /^(top|right|bottom|left)$/;\n if (window.getComputedStyle) {\n getStyles = function(elem) {\n return elem.ownerDocument.defaultView.getComputedStyle(elem, null);\n };\n curCSS = function(elem, name, computed) {\n var width, minWidth, maxWidth, ret, style = elem.style;\n computed = computed || getStyles(elem);\n ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined;\n if (computed) {\n if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n ret = jQuery.style(elem, name);\n }\n if (rnumnonpx.test(ret) && rmargin.test(name)) {\n width = style.width;\n minWidth = style.minWidth;\n maxWidth = style.maxWidth;\n style.minWidth = style.maxWidth = style.width = ret;\n ret = computed.width;\n style.width = width;\n style.minWidth = minWidth;\n style.maxWidth = maxWidth;\n }\n }\n return ret === undefined ? ret : ret + \"\";\n };\n } else if (document.documentElement.currentStyle) {\n getStyles = function(elem) {\n return elem.currentStyle;\n };\n curCSS = function(elem, name, computed) {\n var left, rs, rsLeft, ret, style = elem.style;\n computed = computed || getStyles(elem);\n ret = computed ? computed[name] : undefined;\n if (ret == null && style && style[name]) {\n ret = style[name];\n }\n if (rnumnonpx.test(ret) && !rposition.test(name)) {\n left = style.left;\n rs = elem.runtimeStyle;\n rsLeft = rs && rs.left;\n if (rsLeft) {\n rs.left = elem.currentStyle.left;\n }\n style.left = name === \"fontSize\" ? \"1em\" : ret;\n ret = style.pixelLeft + \"px\";\n style.left = left;\n if (rsLeft) {\n rs.left = rsLeft;\n }\n }\n return ret === undefined ? ret : ret + \"\" || \"auto\";\n };\n }\n function addGetHookIf(conditionFn, hookFn) {\n return {\n get: function() {\n var condition = conditionFn();\n if (condition == null) {\n return;\n }\n if (condition) {\n delete this.get;\n return;\n }\n return (this.get = hookFn).apply(this, arguments);\n }\n };\n }(function() {\n var div, style, a, pixelPositionVal, boxSizingReliableVal, reliableHiddenOffsetsVal, reliableMarginRightVal;\n div = document.createElement(\"div\");\n div.innerHTML = \" <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n a = div.getElementsByTagName(\"a\")[0];\n style = a && a.style;\n if (!style) {\n return;\n }\n style.cssText = \"float:left;opacity:.5\";\n support.opacity = style.opacity === \"0.5\";\n support.cssFloat = !! style.cssFloat;\n div.style.backgroundClip = \"content-box\";\n div.cloneNode(true).style.backgroundClip = \"\";\n support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n support.boxSizing = style.boxSizing === \"\" || style.MozBoxSizing === \"\" || style.WebkitBoxSizing === \"\";\n jQuery.extend(support, {\n reliableHiddenOffsets: function() {\n if (reliableHiddenOffsetsVal == null) {\n computeStyleTests();\n }\n return reliableHiddenOffsetsVal;\n },\n boxSizingReliable: function() {\n if (boxSizingReliableVal == null) {\n computeStyleTests();\n }\n return boxSizingReliableVal;\n },\n pixelPosition: function() {\n if (pixelPositionVal == null) {\n computeStyleTests();\n }\n return pixelPositionVal;\n },\n reliableMarginRight: function() {\n if (reliableMarginRightVal == null) {\n computeStyleTests();\n }\n return reliableMarginRightVal;\n }\n });\n\n function computeStyleTests() {\n var div, body, container, contents;\n body = document.getElementsByTagName(\"body\")[0];\n if (!body || !body.style) {\n return;\n }\n div = document.createElement(\"div\");\n container = document.createElement(\"div\");\n container.style.cssText = \"position:absolute;border:0;width:0;height:0;top:0;left:-9999px\";\n body.appendChild(container).appendChild(div);\n div.style.cssText = \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" + \"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" + \"border:1px;padding:1px;width:4px;position:absolute\";\n pixelPositionVal = boxSizingReliableVal = false;\n reliableMarginRightVal = true;\n if (window.getComputedStyle) {\n pixelPositionVal = (window.getComputedStyle(div, null) || {}).top !== \"1%\";\n boxSizingReliableVal = (window.getComputedStyle(div, null) || {\n width: \"4px\"\n }).width === \"4px\";\n contents = div.appendChild(document.createElement(\"div\"));\n contents.style.cssText = div.style.cssText = \"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" + \"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n contents.style.marginRight = contents.style.width = \"0\";\n div.style.width = \"1px\";\n reliableMarginRightVal = !parseFloat((window.getComputedStyle(contents, null) || {}).marginRight);\n }\n div.innerHTML = \"<table><tr><td></td><td>t</td></tr></table>\";\n contents = div.getElementsByTagName(\"td\");\n contents[0].style.cssText = \"margin:0;border:0;padding:0;display:none\";\n reliableHiddenOffsetsVal = contents[0].offsetHeight === 0;\n if (reliableHiddenOffsetsVal) {\n contents[0].style.display = \"\";\n contents[1].style.display = \"none\";\n reliableHiddenOffsetsVal = contents[0].offsetHeight === 0;\n }\n body.removeChild(container);\n }\n })();\n jQuery.swap = function(elem, options, callback, args) {\n var ret, name, old = {};\n for (name in options) {\n old[name] = elem.style[name];\n elem.style[name] = options[name];\n }\n ret = callback.apply(elem, args || []);\n for (name in options) {\n elem.style[name] = old[name];\n }\n return ret;\n };\n var ralpha = /alpha\\([^)]*\\)/i,\n ropacity = /opacity\\s*=\\s*([^)]*)/,\n rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n rnumsplit = new RegExp(\"^(\" + pnum + \")(.*)$\", \"i\"),\n rrelNum = new RegExp(\"^([+-])=(\" + pnum + \")\", \"i\"),\n cssShow = {\n position: \"absolute\",\n visibility: \"hidden\",\n display: \"block\"\n },\n cssNormalTransform = {\n letterSpacing: \"0\",\n fontWeight: \"400\"\n },\n cssPrefixes = [\"Webkit\", \"O\", \"Moz\", \"ms\"];\n\n function vendorPropName(style, name) {\n if (name in style) {\n return name;\n }\n var capName = name.charAt(0).toUpperCase() + name.slice(1),\n origName = name,\n i = cssPrefixes.length;\n while (i--) {\n name = cssPrefixes[i] + capName;\n if (name in style) {\n return name;\n }\n }\n return origName;\n }\n function showHide(elements, show) {\n var display, elem, hidden, values = [],\n index = 0,\n length = elements.length;\n for (; index < length; index++) {\n elem = elements[index];\n if (!elem.style) {\n continue;\n }\n values[index] = jQuery._data(elem, \"olddisplay\");\n display = elem.style.display;\n if (show) {\n if (!values[index] && display === \"none\") {\n elem.style.display = \"\";\n }\n if (elem.style.display === \"\" && isHidden(elem)) {\n values[index] = jQuery._data(elem, \"olddisplay\", defaultDisplay(elem.nodeName));\n }\n } else {\n hidden = isHidden(elem);\n if (display && display !== \"none\" || !hidden) {\n jQuery._data(elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\"));\n }\n }\n }\n for (index = 0; index < length; index++) {\n elem = elements[index];\n if (!elem.style) {\n continue;\n }\n if (!show || elem.style.display === \"none\" || elem.style.display === \"\") {\n elem.style.display = show ? values[index] || \"\" : \"none\";\n }\n }\n return elements;\n }\n function setPositiveNumber(elem, value, subtract) {\n var matches = rnumsplit.exec(value);\n return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || \"px\") : value;\n }\n function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n var i = extra === (isBorderBox ? \"border\" : \"content\") ? 4 : name === \"width\" ? 1 : 0,\n val = 0;\n for (; i < 4; i += 2) {\n if (extra === \"margin\") {\n val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n }\n if (isBorderBox) {\n if (extra === \"content\") {\n val -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n }\n if (extra !== \"margin\") {\n val -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n }\n } else {\n val += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n if (extra !== \"padding\") {\n val += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n }\n }\n }\n return val;\n }\n function getWidthOrHeight(elem, name, extra) {\n var valueIsBorderBox = true,\n val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n styles = getStyles(elem),\n isBorderBox = support.boxSizing && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\";\n if (val <= 0 || val == null) {\n val = curCSS(elem, name, styles);\n if (val < 0 || val == null) {\n val = elem.style[name];\n }\n if (rnumnonpx.test(val)) {\n return val;\n }\n valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n val = parseFloat(val) || 0;\n }\n return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles)) + \"px\";\n }\n jQuery.extend({\n cssHooks: {\n opacity: {\n get: function(elem, computed) {\n if (computed) {\n var ret = curCSS(elem, \"opacity\");\n return ret === \"\" ? \"1\" : ret;\n }\n }\n }\n },\n cssNumber: {\n \"columnCount\": true,\n \"fillOpacity\": true,\n \"flexGrow\": true,\n \"flexShrink\": true,\n \"fontWeight\": true,\n \"lineHeight\": true,\n \"opacity\": true,\n \"order\": true,\n \"orphans\": true,\n \"widows\": true,\n \"zIndex\": true,\n \"zoom\": true\n },\n cssProps: {\n \"float\": support.cssFloat ? \"cssFloat\" : \"styleFloat\"\n },\n style: function(elem, name, value, extra) {\n if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n return;\n }\n var ret, type, hooks, origName = jQuery.camelCase(name),\n style = elem.style;\n name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));\n hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n if (value !== undefined) {\n type = typeof value;\n if (type === \"string\" && (ret = rrelNum.exec(value))) {\n value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));\n type = \"number\";\n }\n if (value == null || value !== value) {\n return;\n }\n if (type === \"number\" && !jQuery.cssNumber[origName]) {\n value += \"px\";\n }\n if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n style[name] = \"inherit\";\n }\n if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n try {\n style[name] = value;\n } catch (e) {}\n }\n } else {\n if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n return ret;\n }\n return style[name];\n }\n },\n css: function(elem, name, extra, styles) {\n var num, val, hooks, origName = jQuery.camelCase(name);\n name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));\n hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n if (hooks && \"get\" in hooks) {\n val = hooks.get(elem, true, extra);\n }\n if (val === undefined) {\n val = curCSS(elem, name, styles);\n }\n if (val === \"normal\" && name in cssNormalTransform) {\n val = cssNormalTransform[name];\n }\n if (extra === \"\" || extra) {\n num = parseFloat(val);\n return extra === true || jQuery.isNumeric(num) ? num || 0 : val;\n }\n return val;\n }\n });\n jQuery.each([\"height\", \"width\"], function(i, name) {\n jQuery.cssHooks[name] = {\n get: function(elem, computed, extra) {\n if (computed) {\n return rdisplayswap.test(jQuery.css(elem, \"display\")) && elem.offsetWidth === 0 ? jQuery.swap(elem, cssShow, function() {\n return getWidthOrHeight(elem, name, extra);\n }) : getWidthOrHeight(elem, name, extra);\n }\n },\n set: function(elem, value, extra) {\n var styles = extra && getStyles(elem);\n return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, support.boxSizing && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\", styles) : 0);\n }\n };\n });\n if (!support.opacity) {\n jQuery.cssHooks.opacity = {\n get: function(elem, computed) {\n return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || \"\") ? (0.01 * parseFloat(RegExp.$1)) + \"\" : computed ? \"1\" : \"\";\n },\n set: function(elem, value) {\n var style = elem.style,\n currentStyle = elem.currentStyle,\n opacity = jQuery.isNumeric(value) ? \"alpha(opacity=\" + value * 100 + \")\" : \"\",\n filter = currentStyle && currentStyle.filter || style.filter || \"\";\n style.zoom = 1;\n if ((value >= 1 || value === \"\") && jQuery.trim(filter.replace(ralpha, \"\")) === \"\" && style.removeAttribute) {\n style.removeAttribute(\"filter\");\n if (value === \"\" || currentStyle && !currentStyle.filter) {\n return;\n }\n }\n style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + \" \" + opacity;\n }\n };\n }\n jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {\n if (computed) {\n return jQuery.swap(elem, {\n \"display\": \"inline-block\"\n }, curCSS, [elem, \"marginRight\"]);\n }\n });\n jQuery.each({\n margin: \"\",\n padding: \"\",\n border: \"Width\"\n }, function(prefix, suffix) {\n jQuery.cssHooks[prefix + suffix] = {\n expand: function(value) {\n var i = 0,\n expanded = {},\n parts = typeof value === \"string\" ? value.split(\" \") : [value];\n for (; i < 4; i++) {\n expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n }\n return expanded;\n }\n };\n if (!rmargin.test(prefix)) {\n jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n }\n });\n jQuery.fn.extend({\n css: function(name, value) {\n return access(this, function(elem, name, value) {\n var styles, len, map = {},\n i = 0;\n if (jQuery.isArray(name)) {\n styles = getStyles(elem);\n len = name.length;\n for (; i < len; i++) {\n map[name[i]] = jQuery.css(elem, name[i], false, styles);\n }\n return map;\n }\n return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n }, name, value, arguments.length > 1);\n },\n show: function() {\n return showHide(this, true);\n },\n hide: function() {\n return showHide(this);\n },\n toggle: function(state) {\n if (typeof state === \"boolean\") {\n return state ? this.show() : this.hide();\n }\n return this.each(function() {\n if (isHidden(this)) {\n jQuery(this).show();\n } else {\n jQuery(this).hide();\n }\n });\n }\n });\n\n function Tween(elem, options, prop, end, easing) {\n return new Tween.prototype.init(elem, options, prop, end, easing);\n }\n jQuery.Tween = Tween;\n Tween.prototype = {\n constructor: Tween,\n init: function(elem, options, prop, end, easing, unit) {\n this.elem = elem;\n this.prop = prop;\n this.easing = easing || \"swing\";\n this.options = options;\n this.start = this.now = this.cur();\n this.end = end;\n this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n },\n cur: function() {\n var hooks = Tween.propHooks[this.prop];\n return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n },\n run: function(percent) {\n var eased, hooks = Tween.propHooks[this.prop];\n if (this.options.duration) {\n this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n } else {\n this.pos = eased = percent;\n }\n this.now = (this.end - this.start) * eased + this.start;\n if (this.options.step) {\n this.options.step.call(this.elem, this.now, this);\n }\n if (hooks && hooks.set) {\n hooks.set(this);\n } else {\n Tween.propHooks._default.set(this);\n }\n return this;\n }\n };\n Tween.prototype.init.prototype = Tween.prototype;\n Tween.propHooks = {\n _default: {\n get: function(tween) {\n var result;\n if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {\n return tween.elem[tween.prop];\n }\n result = jQuery.css(tween.elem, tween.prop, \"\");\n return !result || result === \"auto\" ? 0 : result;\n },\n set: function(tween) {\n if (jQuery.fx.step[tween.prop]) {\n jQuery.fx.step[tween.prop](tween);\n } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n } else {\n tween.elem[tween.prop] = tween.now;\n }\n }\n }\n };\n Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n set: function(tween) {\n if (tween.elem.nodeType && tween.elem.parentNode) {\n tween.elem[tween.prop] = tween.now;\n }\n }\n };\n jQuery.easing = {\n linear: function(p) {\n return p;\n },\n swing: function(p) {\n return 0.5 - Math.cos(p * Math.PI) / 2;\n }\n };\n jQuery.fx = Tween.prototype.init;\n jQuery.fx.step = {};\n var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/,\n rfxnum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\"),\n rrun = /queueHooks$/,\n animationPrefilters = [defaultPrefilter],\n tweeners = {\n \"*\": [function(prop, value) {\n var tween = this.createTween(prop, value),\n target = tween.cur(),\n parts = rfxnum.exec(value),\n unit = parts && parts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n start = (jQuery.cssNumber[prop] || unit !== \"px\" && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),\n scale = 1,\n maxIterations = 20;\n if (start && start[3] !== unit) {\n unit = unit || start[3];\n parts = parts || [];\n start = +target || 1;\n do {\n scale = scale || \".5\";\n start = start / scale;\n jQuery.style(tween.elem, prop, start + unit);\n } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);\n }\n if (parts) {\n start = tween.start = +start || +target || 0;\n tween.unit = unit;\n tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];\n }\n return tween;}]\n };\n\n function createFxNow() {\n setTimeout(function() {\n fxNow = undefined;\n });\n return (fxNow = jQuery.now());\n }\n function genFx(type, includeWidth) {\n var which, attrs = {\n height: type\n },\n i = 0;\n includeWidth = includeWidth ? 1 : 0;\n for (; i < 4; i += 2 - includeWidth) {\n which = cssExpand[i];\n attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n }\n if (includeWidth) {\n attrs.opacity = attrs.width = type;\n }\n return attrs;\n }\n function createTween(value, prop, animation) {\n var tween, collection = (tweeners[prop] || []).concat(tweeners[\"*\"]),\n index = 0,\n length = collection.length;\n for (; index < length; index++) {\n if ((tween = collection[index].call(animation, prop, value))) {\n return tween;\n }\n }\n }\n function defaultPrefilter(elem, props, opts) {\n var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay, anim = this,\n orig = {},\n style = elem.style,\n hidden = elem.nodeType && isHidden(elem),\n dataShow = jQuery._data(elem, \"fxshow\");\n if (!opts.queue) {\n hooks = jQuery._queueHooks(elem, \"fx\");\n if (hooks.unqueued == null) {\n hooks.unqueued = 0;\n oldfire = hooks.empty.fire;\n hooks.empty.fire = function() {\n if (!hooks.unqueued) {\n oldfire();\n }\n };\n }\n hooks.unqueued++;\n anim.always(function() {\n anim.always(function() {\n hooks.unqueued--;\n if (!jQuery.queue(elem, \"fx\").length) {\n hooks.empty.fire();\n }\n });\n });\n }\n if (elem.nodeType === 1 && (\"height\" in props || \"width\" in props)) {\n opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n display = jQuery.css(elem, \"display\");\n checkDisplay = display === \"none\" ? jQuery._data(elem, \"olddisplay\") || defaultDisplay(elem.nodeName) : display;\n if (checkDisplay === \"inline\" && jQuery.css(elem, \"float\") === \"none\") {\n if (!support.inlineBlockNeedsLayout || defaultDisplay(elem.nodeName) === \"inline\") {\n style.display = \"inline-block\";\n } else {\n style.zoom = 1;\n }\n }\n }\n if (opts.overflow) {\n style.overflow = \"hidden\";\n if (!support.shrinkWrapBlocks()) {\n anim.always(function() {\n style.overflow = opts.overflow[0];\n style.overflowX = opts.overflow[1];\n style.overflowY = opts.overflow[2];\n });\n }\n }\n for (prop in props) {\n value = props[prop];\n if (rfxtypes.exec(value)) {\n delete props[prop];\n toggle = toggle || value === \"toggle\";\n if (value === (hidden ? \"hide\" : \"show\")) {\n if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n hidden = true;\n } else {\n continue;\n }\n }\n orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n } else {\n display = undefined;\n }\n }\n if (!jQuery.isEmptyObject(orig)) {\n if (dataShow) {\n if (\"hidden\" in dataShow) {\n hidden = dataShow.hidden;\n }\n } else {\n dataShow = jQuery._data(elem, \"fxshow\", {});\n }\n if (toggle) {\n dataShow.hidden = !hidden;\n }\n if (hidden) {\n jQuery(elem).show();\n } else {\n anim.done(function() {\n jQuery(elem).hide();\n });\n }\n anim.done(function() {\n var prop;\n jQuery._removeData(elem, \"fxshow\");\n for (prop in orig) {\n jQuery.style(elem, prop, orig[prop]);\n }\n });\n for (prop in orig) {\n tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n if (!(prop in dataShow)) {\n dataShow[prop] = tween.start;\n if (hidden) {\n tween.end = tween.start;\n tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n }\n }\n }\n } else if ((display === \"none\" ? defaultDisplay(elem.nodeName) : display) === \"inline\") {\n style.display = display;\n }\n }\n function propFilter(props, specialEasing) {\n var index, name, easing, value, hooks;\n for (index in props) {\n name = jQuery.camelCase(index);\n easing = specialEasing[name];\n value = props[index];\n if (jQuery.isArray(value)) {\n easing = value[1];\n value = props[index] = value[0];\n }\n if (index !== name) {\n props[name] = value;\n delete props[index];\n }\n hooks = jQuery.cssHooks[name];\n if (hooks && \"expand\" in hooks) {\n value = hooks.expand(value);\n delete props[name];\n for (index in value) {\n if (!(index in props)) {\n props[index] = value[index];\n specialEasing[index] = easing;\n }\n }\n } else {\n specialEasing[name] = easing;\n }\n }\n }\n function Animation(elem, properties, options) {\n var result, stopped, index = 0,\n length = animationPrefilters.length,\n deferred = jQuery.Deferred().always(function() {\n delete tick.elem;\n }),\n tick = function() {\n if (stopped) {\n return false;\n }\n var currentTime = fxNow || createFxNow(),\n remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n temp = remaining / animation.duration || 0,\n percent = 1 - temp,\n index = 0,\n length = animation.tweens.length;\n for (; index < length; index++) {\n animation.tweens[index].run(percent);\n }\n deferred.notifyWith(elem, [animation, percent, remaining]);\n if (percent < 1 && length) {\n return remaining;\n } else {\n deferred.resolveWith(elem, [animation]);\n return false;\n }\n },\n animation = deferred.promise({\n elem: elem,\n props: jQuery.extend({}, properties),\n opts: jQuery.extend(true, {\n specialEasing: {}\n }, options),\n originalProperties: properties,\n originalOptions: options,\n startTime: fxNow || createFxNow(),\n duration: options.duration,\n tweens: [],\n createTween: function(prop, end) {\n var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n animation.tweens.push(tween);\n return tween;\n },\n stop: function(gotoEnd) {\n var index = 0,\n length = gotoEnd ? animation.tweens.length : 0;\n if (stopped) {\n return this;\n }\n stopped = true;\n for (; index < length; index++) {\n animation.tweens[index].run(1);\n }\n if (gotoEnd) {\n deferred.resolveWith(elem, [animation, gotoEnd]);\n } else {\n deferred.rejectWith(elem, [animation, gotoEnd]);\n }\n return this;\n }\n }),\n props = animation.props;\n propFilter(props, animation.opts.specialEasing);\n for (; index < length; index++) {\n result = animationPrefilters[index].call(animation, elem, props, animation.opts);\n if (result) {\n return result;\n }\n }\n jQuery.map(props, createTween, animation);\n if (jQuery.isFunction(animation.opts.start)) {\n animation.opts.start.call(elem, animation);\n }\n jQuery.fx.timer(jQuery.extend(tick, {\n elem: elem,\n anim: animation,\n queue: animation.opts.queue\n }));\n return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n }\n jQuery.Animation = jQuery.extend(Animation, {\n tweener: function(props, callback) {\n if (jQuery.isFunction(props)) {\n callback = props;\n props = [\"*\"];\n } else {\n props = props.split(\" \");\n }\n var prop, index = 0,\n length = props.length;\n for (; index < length; index++) {\n prop = props[index];\n tweeners[prop] = tweeners[prop] || [];\n tweeners[prop].unshift(callback);\n }\n },\n prefilter: function(callback, prepend) {\n if (prepend) {\n animationPrefilters.unshift(callback);\n } else {\n animationPrefilters.push(callback);\n }\n }\n });\n jQuery.speed = function(speed, easing, fn) {\n var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n duration: speed,\n easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n };\n opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;\n if (opt.queue == null || opt.queue === true) {\n opt.queue = \"fx\";\n }\n opt.old = opt.complete;\n opt.complete = function() {\n if (jQuery.isFunction(opt.old)) {\n opt.old.call(this);\n }\n if (opt.queue) {\n jQuery.dequeue(this, opt.queue);\n }\n };\n return opt;\n };\n jQuery.fn.extend({\n fadeTo: function(speed, to, easing, callback) {\n return this.filter(isHidden).css(\"opacity\", 0).show().end().animate({\n opacity: to\n }, speed, easing, callback);\n },\n animate: function(prop, speed, easing, callback) {\n var empty = jQuery.isEmptyObject(prop),\n optall = jQuery.speed(speed, easing, callback),\n doAnimation = function() {\n var anim = Animation(this, jQuery.extend({}, prop), optall);\n if (empty || jQuery._data(this, \"finish\")) {\n anim.stop(true);\n }\n };\n doAnimation.finish = doAnimation;\n return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n },\n stop: function(type, clearQueue, gotoEnd) {\n var stopQueue = function(hooks) {\n var stop = hooks.stop;\n delete hooks.stop;\n stop(gotoEnd);\n };\n if (typeof type !== \"string\") {\n gotoEnd = clearQueue;\n clearQueue = type;\n type = undefined;\n }\n if (clearQueue && type !== false) {\n this.queue(type || \"fx\", []);\n }\n return this.each(function() {\n var dequeue = true,\n index = type != null && type + \"queueHooks\",\n timers = jQuery.timers,\n data = jQuery._data(this);\n if (index) {\n if (data[index] && data[index].stop) {\n stopQueue(data[index]);\n }\n } else {\n for (index in data) {\n if (data[index] && data[index].stop && rrun.test(index)) {\n stopQueue(data[index]);\n }\n }\n }\n for (index = timers.length; index--;) {\n if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n timers[index].anim.stop(gotoEnd);\n dequeue = false;\n timers.splice(index, 1);\n }\n }\n if (dequeue || !gotoEnd) {\n jQuery.dequeue(this, type);\n }\n });\n },\n finish: function(type) {\n if (type !== false) {\n type = type || \"fx\";\n }\n return this.each(function() {\n var index, data = jQuery._data(this),\n queue = data[type + \"queue\"],\n hooks = data[type + \"queueHooks\"],\n timers = jQuery.timers,\n length = queue ? queue.length : 0;\n data.finish = true;\n jQuery.queue(this, type, []);\n if (hooks && hooks.stop) {\n hooks.stop.call(this, true);\n }\n for (index = timers.length; index--;) {\n if (timers[index].elem === this && timers[index].queue === type) {\n timers[index].anim.stop(true);\n timers.splice(index, 1);\n }\n }\n for (index = 0; index < length; index++) {\n if (queue[index] && queue[index].finish) {\n queue[index].finish.call(this);\n }\n }\n delete data.finish;\n });\n }\n });\n jQuery.each([\"toggle\", \"show\", \"hide\"], function(i, name) {\n var cssFn = jQuery.fn[name];\n jQuery.fn[name] = function(speed, easing, callback) {\n return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n };\n });\n jQuery.each({\n slideDown: genFx(\"show\"),\n slideUp: genFx(\"hide\"),\n slideToggle: genFx(\"toggle\"),\n fadeIn: {\n opacity: \"show\"\n },\n fadeOut: {\n opacity: \"hide\"\n },\n fadeToggle: {\n opacity: \"toggle\"\n }\n }, function(name, props) {\n jQuery.fn[name] = function(speed, easing, callback) {\n return this.animate(props, speed, easing, callback);\n };\n });\n jQuery.timers = [];\n jQuery.fx.tick = function() {\n var timer, timers = jQuery.timers,\n i = 0;\n fxNow = jQuery.now();\n for (; i < timers.length; i++) {\n timer = timers[i];\n if (!timer() && timers[i] === timer) {\n timers.splice(i--, 1);\n }\n }\n if (!timers.length) {\n jQuery.fx.stop();\n }\n fxNow = undefined;\n };\n jQuery.fx.timer = function(timer) {\n jQuery.timers.push(timer);\n if (timer()) {\n jQuery.fx.start();\n } else {\n jQuery.timers.pop();\n }\n };\n jQuery.fx.interval = 13;\n jQuery.fx.start = function() {\n if (!timerId) {\n timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);\n }\n };\n jQuery.fx.stop = function() {\n clearInterval(timerId);\n timerId = null;\n };\n jQuery.fx.speeds = {\n slow: 600,\n fast: 200,\n _default: 400\n };\n jQuery.fn.delay = function(time, type) {\n time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n type = type || \"fx\";\n return this.queue(type, function(next, hooks) {\n var timeout = setTimeout(next, time);\n hooks.stop = function() {\n clearTimeout(timeout);\n };\n });\n };\n (function() {\n var input, div, select, a, opt;\n div = document.createElement(\"div\");\n div.setAttribute(\"className\", \"t\");\n div.innerHTML = \" <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n a = div.getElementsByTagName(\"a\")[0];\n select = document.createElement(\"select\");\n opt = select.appendChild(document.createElement(\"option\"));\n input = div.getElementsByTagName(\"input\")[0];\n a.style.cssText = \"top:1px\";\n support.getSetAttribute = div.className !== \"t\";\n support.style = /top/.test(a.getAttribute(\"style\"));\n support.hrefNormalized = a.getAttribute(\"href\") === \"/a\";\n support.checkOn = !! input.value;\n support.optSelected = opt.selected;\n support.enctype = !! document.createElement(\"form\").enctype;\n select.disabled = true;\n support.optDisabled = !opt.disabled;\n input = document.createElement(\"input\");\n input.setAttribute(\"value\", \"\");\n support.input = input.getAttribute(\"value\") === \"\";\n input.value = \"t\";\n input.setAttribute(\"type\", \"radio\");\n support.radioValue = input.value === \"t\";\n })();\n var rreturn = /\\r/g;\n jQuery.fn.extend({\n val: function(value) {\n var hooks, ret, isFunction, elem = this[0];\n if (!arguments.length) {\n if (elem) {\n hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n return ret;\n }\n ret = elem.value;\n return typeof ret === \"string\" ? ret.replace(rreturn, \"\") : ret == null ? \"\" : ret;\n }\n return;\n }\n isFunction = jQuery.isFunction(value);\n return this.each(function(i) {\n var val;\n if (this.nodeType !== 1) {\n return;\n }\n if (isFunction) {\n val = value.call(this, i, jQuery(this).val());\n } else {\n val = value;\n }\n if (val == null) {\n val = \"\";\n } else if (typeof val === \"number\") {\n val += \"\";\n } else if (jQuery.isArray(val)) {\n val = jQuery.map(val, function(value) {\n return value == null ? \"\" : value + \"\";\n });\n }\n hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n this.value = val;\n }\n });\n }\n });\n jQuery.extend({\n valHooks: {\n option: {\n get: function(elem) {\n var val = jQuery.find.attr(elem, \"value\");\n return val != null ? val : jQuery.trim(jQuery.text(elem));\n }\n },\n select: {\n get: function(elem) {\n var value, option, options = elem.options,\n index = elem.selectedIndex,\n one = elem.type === \"select-one\" || index < 0,\n values = one ? null : [],\n max = one ? index + 1 : options.length,\n i = index < 0 ? max : one ? index : 0;\n for (; i < max; i++) {\n option = options[i];\n if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \"optgroup\"))) {\n value = jQuery(option).val();\n if (one) {\n return value;\n }\n values.push(value);\n }\n }\n return values;\n },\n set: function(elem, value) {\n var optionSet, option, options = elem.options,\n values = jQuery.makeArray(value),\n i = options.length;\n while (i--) {\n option = options[i];\n if (jQuery.inArray(jQuery.valHooks.option.get(option), values) >= 0) {\n try {\n option.selected = optionSet = true;\n } catch (_) {\n option.scrollHeight;\n }\n } else {\n option.selected = false;\n }\n }\n if (!optionSet) {\n elem.selectedIndex = -1;\n }\n return options;\n }\n }\n }\n });\n jQuery.each([\"radio\", \"checkbox\"], function() {\n jQuery.valHooks[this] = {\n set: function(elem, value) {\n if (jQuery.isArray(value)) {\n return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);\n }\n }\n };\n if (!support.checkOn) {\n jQuery.valHooks[this].get = function(elem) {\n return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n };\n }\n });\n var nodeHook, boolHook, attrHandle = jQuery.expr.attrHandle,\n ruseDefault = /^(?:checked|selected)$/i,\n getSetAttribute = support.getSetAttribute,\n getSetInput = support.input;\n jQuery.fn.extend({\n attr: function(name, value) {\n return access(this, jQuery.attr, name, value, arguments.length > 1);\n },\n removeAttr: function(name) {\n return this.each(function() {\n jQuery.removeAttr(this, name);\n });\n }\n });\n jQuery.extend({\n attr: function(elem, name, value) {\n var hooks, ret, nType = elem.nodeType;\n if (!elem || nType === 3 || nType === 8 || nType === 2) {\n return;\n }\n if (typeof elem.getAttribute === strundefined) {\n return jQuery.prop(elem, name, value);\n }\n if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n name = name.toLowerCase();\n hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);\n }\n if (value !== undefined) {\n if (value === null) {\n jQuery.removeAttr(elem, name);\n } else if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n return ret;\n } else {\n elem.setAttribute(name, value + \"\");\n return value;\n }\n } else if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n return ret;\n } else {\n ret = jQuery.find.attr(elem, name);\n return ret == null ? undefined : ret;\n }\n },\n removeAttr: function(elem, value) {\n var name, propName, i = 0,\n attrNames = value && value.match(rnotwhite);\n if (attrNames && elem.nodeType === 1) {\n while ((name = attrNames[i++])) {\n propName = jQuery.propFix[name] || name;\n if (jQuery.expr.match.bool.test(name)) {\n if (getSetInput && getSetAttribute || !ruseDefault.test(name)) {\n elem[propName] = false;\n } else {\n elem[jQuery.camelCase(\"default-\" + name)] = elem[propName] = false;\n }\n } else {\n jQuery.attr(elem, name, \"\");\n }\n elem.removeAttribute(getSetAttribute ? name : propName);\n }\n }\n },\n attrHooks: {\n type: {\n set: function(elem, value) {\n if (!support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\")) {\n var val = elem.value;\n elem.setAttribute(\"type\", value);\n if (val) {\n elem.value = val;\n }\n return value;\n }\n }\n }\n }\n });\n boolHook = {\n set: function(elem, value, name) {\n if (value === false) {\n jQuery.removeAttr(elem, name);\n } else if (getSetInput && getSetAttribute || !ruseDefault.test(name)) {\n elem.setAttribute(!getSetAttribute && jQuery.propFix[name] || name, name);\n } else {\n elem[jQuery.camelCase(\"default-\" + name)] = elem[name] = true;\n }\n return name;\n }\n };\n jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function(i, name) {\n var getter = attrHandle[name] || jQuery.find.attr;\n attrHandle[name] = getSetInput && getSetAttribute || !ruseDefault.test(name) ?\n function(elem, name, isXML) {\n var ret, handle;\n if (!isXML) {\n handle = attrHandle[name];\n attrHandle[name] = ret;\n ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;\n attrHandle[name] = handle;\n }\n return ret;\n } : function(elem, name, isXML) {\n if (!isXML) {\n return elem[jQuery.camelCase(\"default-\" + name)] ? name.toLowerCase() : null;\n }\n };\n });\n if (!getSetInput || !getSetAttribute) {\n jQuery.attrHooks.value = {\n set: function(elem, value, name) {\n if (jQuery.nodeName(elem, \"input\")) {\n elem.defaultValue = value;\n } else {\n return nodeHook && nodeHook.set(elem, value, name);\n }\n }\n };\n }\n if (!getSetAttribute) {\n nodeHook = {\n set: function(elem, value, name) {\n var ret = elem.getAttributeNode(name);\n if (!ret) {\n elem.setAttributeNode((ret = elem.ownerDocument.createAttribute(name)));\n }\n ret.value = value += \"\";\n if (name === \"value\" || value === elem.getAttribute(name)) {\n return value;\n }\n }\n };\n attrHandle.id = attrHandle.name = attrHandle.coords = function(elem, name, isXML) {\n var ret;\n if (!isXML) {\n return (ret = elem.getAttributeNode(name)) && ret.value !== \"\" ? ret.value : null;\n }\n };\n jQuery.valHooks.button = {\n get: function(elem, name) {\n var ret = elem.getAttributeNode(name);\n if (ret && ret.specified) {\n return ret.value;\n }\n },\n set: nodeHook.set\n };\n jQuery.attrHooks.contenteditable = {\n set: function(elem, value, name) {\n nodeHook.set(elem, value === \"\" ? false : value, name);\n }\n };\n jQuery.each([\"width\", \"height\"], function(i, name) {\n jQuery.attrHooks[name] = {\n set: function(elem, value) {\n if (value === \"\") {\n elem.setAttribute(name, \"auto\");\n return value;\n }\n }\n };\n });\n }\n if (!support.style) {\n jQuery.attrHooks.style = {\n get: function(elem) {\n return elem.style.cssText || undefined;\n },\n set: function(elem, value) {\n return (elem.style.cssText = value + \"\");\n }\n };\n }\n var rfocusable = /^(?:input|select|textarea|button|object)$/i,\n rclickable = /^(?:a|area)$/i;\n jQuery.fn.extend({\n prop: function(name, value) {\n return access(this, jQuery.prop, name, value, arguments.length > 1);\n },\n removeProp: function(name) {\n name = jQuery.propFix[name] || name;\n return this.each(function() {\n try {\n this[name] = undefined;\n delete this[name];\n } catch (e) {}\n });\n }\n });\n jQuery.extend({\n propFix: {\n \"for\": \"htmlFor\",\n \"class\": \"className\"\n },\n prop: function(elem, name, value) {\n var ret, hooks, notxml, nType = elem.nodeType;\n if (!elem || nType === 3 || nType === 8 || nType === 2) {\n return;\n }\n notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n if (notxml) {\n name = jQuery.propFix[name] || name;\n hooks = jQuery.propHooks[name];\n }\n if (value !== undefined) {\n return hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : (elem[name] = value);\n } else {\n return hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];\n }\n },\n propHooks: {\n tabIndex: {\n get: function(elem) {\n var tabindex = jQuery.find.attr(elem, \"tabindex\");\n return tabindex ? parseInt(tabindex, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : -1;\n }\n }\n }\n });\n if (!support.hrefNormalized) {\n jQuery.each([\"href\", \"src\"], function(i, name) {\n jQuery.propHooks[name] = {\n get: function(elem) {\n return elem.getAttribute(name, 4);\n }\n };\n });\n }\n if (!support.optSelected) {\n jQuery.propHooks.selected = {\n get: function(elem) {\n var parent = elem.parentNode;\n if (parent) {\n parent.selectedIndex;\n if (parent.parentNode) {\n parent.parentNode.selectedIndex;\n }\n }\n return null;\n }\n };\n }\n jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function() {\n jQuery.propFix[this.toLowerCase()] = this;\n });\n if (!support.enctype) {\n jQuery.propFix.enctype = \"encoding\";\n }\n var rclass = /[\\t\\r\\n\\f]/g;\n jQuery.fn.extend({\n addClass: function(value) {\n var classes, elem, cur, clazz, j, finalValue, i = 0,\n len = this.length,\n proceed = typeof value === \"string\" && value;\n if (jQuery.isFunction(value)) {\n return this.each(function(j) {\n jQuery(this).addClass(value.call(this, j, this.className));\n });\n }\n if (proceed) {\n classes = (value || \"\").match(rnotwhite) || [];\n for (; i < len; i++) {\n elem = this[i];\n cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \" \");\n if (cur) {\n j = 0;\n while ((clazz = classes[j++])) {\n if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n cur += clazz + \" \";\n }\n }\n finalValue = jQuery.trim(cur);\n if (elem.className !== finalValue) {\n elem.className = finalValue;\n }\n }\n }\n }\n return this;\n },\n removeClass: function(value) {\n var classes, elem, cur, clazz, j, finalValue, i = 0,\n len = this.length,\n proceed = arguments.length === 0 || typeof value === \"string\" && value;\n if (jQuery.isFunction(value)) {\n return this.each(function(j) {\n jQuery(this).removeClass(value.call(this, j, this.className));\n });\n }\n if (proceed) {\n classes = (value || \"\").match(rnotwhite) || [];\n for (; i < len; i++) {\n elem = this[i];\n cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \"\");\n if (cur) {\n j = 0;\n while ((clazz = classes[j++])) {\n while (cur.indexOf(\" \" + clazz + \" \") >= 0) {\n cur = cur.replace(\" \" + clazz + \" \", \" \");\n }\n }\n finalValue = value ? jQuery.trim(cur) : \"\";\n if (elem.className !== finalValue) {\n elem.className = finalValue;\n }\n }\n }\n }\n return this;\n },\n toggleClass: function(value, stateVal) {\n var type = typeof value;\n if (typeof stateVal === \"boolean\" && type === \"string\") {\n return stateVal ? this.addClass(value) : this.removeClass(value);\n }\n if (jQuery.isFunction(value)) {\n return this.each(function(i) {\n jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n });\n }\n return this.each(function() {\n if (type === \"string\") {\n var className, i = 0,\n self = jQuery(this),\n classNames = value.match(rnotwhite) || [];\n while ((className = classNames[i++])) {\n if (self.hasClass(className)) {\n self.removeClass(className);\n } else {\n self.addClass(className);\n }\n }\n } else if (type === strundefined || type === \"boolean\") {\n if (this.className) {\n jQuery._data(this, \"__className__\", this.className);\n }\n this.className = this.className || value === false ? \"\" : jQuery._data(this, \"__className__\") || \"\";\n }\n });\n },\n hasClass: function(selector) {\n var className = \" \" + selector + \" \",\n i = 0,\n l = this.length;\n for (; i < l; i++) {\n if (this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf(className) >= 0) {\n return true;\n }\n }\n return false;\n }\n });\n jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function(i, name) {\n jQuery.fn[name] = function(data, fn) {\n return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n };\n });\n jQuery.fn.extend({\n hover: function(fnOver, fnOut) {\n return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n },\n bind: function(types, data, fn) {\n return this.on(types, null, data, fn);\n },\n unbind: function(types, fn) {\n return this.off(types, null, fn);\n },\n delegate: function(selector, types, data, fn) {\n return this.on(types, selector, data, fn);\n },\n undelegate: function(selector, types, fn) {\n return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n }\n });\n var nonce = jQuery.now();\n var rquery = (/\\?/);\n var rvalidtokens = /(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g;\n jQuery.parseJSON = function(data) {\n if (window.JSON && window.JSON.parse) {\n return window.JSON.parse(data + \"\");\n }\n var requireNonComma, depth = null,\n str = jQuery.trim(data + \"\");\n return str && !jQuery.trim(str.replace(rvalidtokens, function(token, comma, open, close) {\n if (requireNonComma && comma) {\n depth = 0;\n }\n if (depth === 0) {\n return token;\n }\n requireNonComma = open || comma;\n depth += !close - !open;\n return \"\";\n })) ? (Function(\"return \" + str))() : jQuery.error(\"Invalid JSON: \" + data);\n };\n jQuery.parseXML = function(data) {\n var xml, tmp;\n if (!data || typeof data !== \"string\") {\n return null;\n }\n try {\n if (window.DOMParser) {\n tmp = new DOMParser();\n xml = tmp.parseFromString(data, \"text/xml\");\n } else {\n xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n xml.async = \"false\";\n xml.loadXML(data);\n }\n } catch (e) {\n xml = undefined;\n }\n if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n jQuery.error(\"Invalid XML: \" + data);\n }\n return xml;\n };\n var ajaxLocParts, ajaxLocation, rhash = /#.*$/,\n rts = /([?&])_=[^&]*/,\n rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg,\n rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n rnoContent = /^(?:GET|HEAD)$/,\n rprotocol = /^\\/\\//,\n rurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n prefilters = {},\n transports = {},\n allTypes = \"*/\".concat(\"*\");\n try {\n ajaxLocation = location.href;\n } catch (e) {\n ajaxLocation = document.createElement(\"a\");\n ajaxLocation.href = \"\";\n ajaxLocation = ajaxLocation.href;\n }\n ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];\n\n function addToPrefiltersOrTransports(structure) {\n return function(dataTypeExpression, func) {\n if (typeof dataTypeExpression !== \"string\") {\n func = dataTypeExpression;\n dataTypeExpression = \"*\";\n }\n var dataType, i = 0,\n dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\n if (jQuery.isFunction(func)) {\n while ((dataType = dataTypes[i++])) {\n if (dataType.charAt(0) === \"+\") {\n dataType = dataType.slice(1) || \"*\";\n (structure[dataType] = structure[dataType] || []).unshift(func);\n } else {\n (structure[dataType] = structure[dataType] || []).push(func);\n }\n }\n }\n };\n }\n function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n var inspected = {},\n seekingTransport = (structure === transports);\n\n function inspect(dataType) {\n var selected;\n inspected[dataType] = true;\n jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\n var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n options.dataTypes.unshift(dataTypeOrTransport);\n inspect(dataTypeOrTransport);\n return false;\n } else if (seekingTransport) {\n return !(selected = dataTypeOrTransport);\n }\n });\n return selected;\n }\n return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n }\n function ajaxExtend(target, src) {\n var deep, key, flatOptions = jQuery.ajaxSettings.flatOptions || {};\n for (key in src) {\n if (src[key] !== undefined) {\n (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\n }\n }\n if (deep) {\n jQuery.extend(true, target, deep);\n }\n return target;\n }\n function ajaxHandleResponses(s, jqXHR, responses) {\n var firstDataType, ct, finalDataType, type, contents = s.contents,\n dataTypes = s.dataTypes;\n while (dataTypes[0] === \"*\") {\n dataTypes.shift();\n if (ct === undefined) {\n ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n }\n }\n if (ct) {\n for (type in contents) {\n if (contents[type] && contents[type].test(ct)) {\n dataTypes.unshift(type);\n break;\n }\n }\n }\n if (dataTypes[0] in responses) {\n finalDataType = dataTypes[0];\n } else {\n for (type in responses) {\n if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n finalDataType = type;\n break;\n }\n if (!firstDataType) {\n firstDataType = type;\n }\n }\n finalDataType = finalDataType || firstDataType;\n }\n if (finalDataType) {\n if (finalDataType !== dataTypes[0]) {\n dataTypes.unshift(finalDataType);\n }\n return responses[finalDataType];\n }\n }\n function ajaxConvert(s, response, jqXHR, isSuccess) {\n var conv2, current, conv, tmp, prev, converters = {},\n dataTypes = s.dataTypes.slice();\n if (dataTypes[1]) {\n for (conv in s.converters) {\n converters[conv.toLowerCase()] = s.converters[conv];\n }\n }\n current = dataTypes.shift();\n while (current) {\n if (s.responseFields[current]) {\n jqXHR[s.responseFields[current]] = response;\n }\n if (!prev && isSuccess && s.dataFilter) {\n response = s.dataFilter(response, s.dataType);\n }\n prev = current;\n current = dataTypes.shift();\n if (current) {\n if (current === \"*\") {\n current = prev;\n } else if (prev !== \"*\" && prev !== current) {\n conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n if (!conv) {\n for (conv2 in converters) {\n tmp = conv2.split(\" \");\n if (tmp[1] === current) {\n conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n if (conv) {\n if (conv === true) {\n conv = converters[conv2];\n } else if (converters[conv2] !== true) {\n current = tmp[0];\n dataTypes.unshift(tmp[1]);\n }\n break;\n }\n }\n }\n }\n if (conv !== true) {\n if (conv && s[\"throws\"]) {\n response = conv(response);\n } else {\n try {\n response = conv(response);\n } catch (e) {\n return {\n state: \"parsererror\",\n error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n };\n }\n }\n }\n }\n }\n }\n return {\n state: \"success\",\n data: response\n };\n }\n jQuery.extend({\n active: 0,\n lastModified: {},\n etag: {},\n ajaxSettings: {\n url: ajaxLocation,\n type: \"GET\",\n isLocal: rlocalProtocol.test(ajaxLocParts[1]),\n global: true,\n processData: true,\n async: true,\n contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n accepts: {\n \"*\": allTypes,\n text: \"text/plain\",\n html: \"text/html\",\n xml: \"application/xml, text/xml\",\n json: \"application/json, text/javascript\"\n },\n contents: {\n xml: /xml/,\n html: /html/,\n json: /json/\n },\n responseFields: {\n xml: \"responseXML\",\n text: \"responseText\",\n json: \"responseJSON\"\n },\n converters: {\n \"* text\": String,\n \"text html\": true,\n \"text json\": jQuery.parseJSON,\n \"text xml\": jQuery.parseXML\n },\n flatOptions: {\n url: true,\n context: true\n }\n },\n ajaxSetup: function(target, settings) {\n return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);\n },\n ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n ajaxTransport: addToPrefiltersOrTransports(transports),\n ajax: function(url, options) {\n if (typeof url === \"object\") {\n options = url;\n url = undefined;\n }\n options = options || {};\n var parts, i, cacheURL, responseHeadersString, timeoutTimer, fireGlobals, transport, responseHeaders, s = jQuery.ajaxSetup({}, options),\n callbackContext = s.context || s,\n globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n deferred = jQuery.Deferred(),\n completeDeferred = jQuery.Callbacks(\"once memory\"),\n statusCode = s.statusCode || {},\n requestHeaders = {},\n requestHeadersNames = {},\n state = 0,\n strAbort = \"canceled\",\n jqXHR = {\n readyState: 0,\n getResponseHeader: function(key) {\n var match;\n if (state === 2) {\n if (!responseHeaders) {\n responseHeaders = {};\n while ((match = rheaders.exec(responseHeadersString))) {\n responseHeaders[match[1].toLowerCase()] = match[2];\n }\n }\n match = responseHeaders[key.toLowerCase()];\n }\n return match == null ? null : match;\n },\n getAllResponseHeaders: function() {\n return state === 2 ? responseHeadersString : null;\n },\n setRequestHeader: function(name, value) {\n var lname = name.toLowerCase();\n if (!state) {\n name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\n requestHeaders[name] = value;\n }\n return this;\n },\n overrideMimeType: function(type) {\n if (!state) {\n s.mimeType = type;\n }\n return this;\n },\n statusCode: function(map) {\n var code;\n if (map) {\n if (state < 2) {\n for (code in map) {\n statusCode[code] = [statusCode[code], map[code]];\n }\n } else {\n jqXHR.always(map[jqXHR.status]);\n }\n }\n return this;\n },\n abort: function(statusText) {\n var finalText = statusText || strAbort;\n if (transport) {\n transport.abort(finalText);\n }\n done(0, finalText);\n return this;\n }\n };\n deferred.promise(jqXHR).complete = completeDeferred.add;\n jqXHR.success = jqXHR.done;\n jqXHR.error = jqXHR.fail;\n s.url = ((url || s.url || ajaxLocation) + \"\").replace(rhash, \"\").replace(rprotocol, ajaxLocParts[1] + \"/\" + \"/\");\n s.type = options.method || options.type || s.method || s.type;\n s.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().match(rnotwhite) || [\"\"];\n if (s.crossDomain == null) {\n parts = rurl.exec(s.url.toLowerCase());\n s.crossDomain = !! (parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === \"http:\" ? \"80\" : \"443\")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? \"80\" : \"443\"))));\n }\n if (s.data && s.processData && typeof s.data !== \"string\") {\n s.data = jQuery.param(s.data, s.traditional);\n }\n inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n if (state === 2) {\n return jqXHR;\n }\n fireGlobals = s.global;\n if (fireGlobals && jQuery.active++ === 0) {\n jQuery.event.trigger(\"ajaxStart\");\n }\n s.type = s.type.toUpperCase();\n s.hasContent = !rnoContent.test(s.type);\n cacheURL = s.url;\n if (!s.hasContent) {\n if (s.data) {\n cacheURL = (s.url += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data);\n delete s.data;\n }\n if (s.cache === false) {\n s.url = rts.test(cacheURL) ? cacheURL.replace(rts, \"$1_=\" + nonce++) : cacheURL + (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++;\n }\n }\n if (s.ifModified) {\n if (jQuery.lastModified[cacheURL]) {\n jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n }\n if (jQuery.etag[cacheURL]) {\n jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n }\n }\n if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n }\n jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]);\n for (i in s.headers) {\n jqXHR.setRequestHeader(i, s.headers[i]);\n }\n if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n return jqXHR.abort();\n }\n strAbort = \"abort\";\n for (i in {\n success: 1,\n error: 1,\n complete: 1\n }) {\n jqXHR[i](s[i]);\n }\n transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n if (!transport) {\n done(-1, \"No Transport\");\n } else {\n jqXHR.readyState = 1;\n if (fireGlobals) {\n globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n }\n if (s.async && s.timeout > 0) {\n timeoutTimer = setTimeout(function() {\n jqXHR.abort(\"timeout\");\n }, s.timeout);\n }\n try {\n state = 1;\n transport.send(requestHeaders, done);\n } catch (e) {\n if (state < 2) {\n done(-1, e);\n } else {\n throw e;\n }\n }\n }\n function done(status, nativeStatusText, responses, headers) {\n var isSuccess, success, error, response, modified, statusText = nativeStatusText;\n if (state === 2) {\n return;\n }\n state = 2;\n if (timeoutTimer) {\n clearTimeout(timeoutTimer);\n }\n transport = undefined;\n responseHeadersString = headers || \"\";\n jqXHR.readyState = status > 0 ? 4 : 0;\n isSuccess = status >= 200 && status < 300 || status === 304;\n if (responses) {\n response = ajaxHandleResponses(s, jqXHR, responses);\n }\n response = ajaxConvert(s, response, jqXHR, isSuccess);\n if (isSuccess) {\n if (s.ifModified) {\n modified = jqXHR.getResponseHeader(\"Last-Modified\");\n if (modified) {\n jQuery.lastModified[cacheURL] = modified;\n }\n modified = jqXHR.getResponseHeader(\"etag\");\n if (modified) {\n jQuery.etag[cacheURL] = modified;\n }\n }\n if (status === 204 || s.type === \"HEAD\") {\n statusText = \"nocontent\";\n } else if (status === 304) {\n statusText = \"notmodified\";\n } else {\n statusText = response.state;\n success = response.data;\n error = response.error;\n isSuccess = !error;\n }\n } else {\n error = statusText;\n if (status || !statusText) {\n statusText = \"error\";\n if (status < 0) {\n status = 0;\n }\n }\n }\n jqXHR.status = status;\n jqXHR.statusText = (nativeStatusText || statusText) + \"\";\n if (isSuccess) {\n deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n } else {\n deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n }\n jqXHR.statusCode(statusCode);\n statusCode = undefined;\n if (fireGlobals) {\n globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n }\n completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n if (fireGlobals) {\n globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n if (!(--jQuery.active)) {\n jQuery.event.trigger(\"ajaxStop\");\n }\n }\n }\n return jqXHR;\n },\n getJSON: function(url, data, callback) {\n return jQuery.get(url, data, callback, \"json\");\n },\n getScript: function(url, callback) {\n return jQuery.get(url, undefined, callback, \"script\");\n }\n });\n jQuery.each([\"get\", \"post\"], function(i, method) {\n jQuery[method] = function(url, data, callback, type) {\n if (jQuery.isFunction(data)) {\n type = type || callback;\n callback = data;\n data = undefined;\n }\n return jQuery.ajax({\n url: url,\n type: method,\n dataType: type,\n data: data,\n success: callback\n });\n };\n });\n jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function(i, type) {\n jQuery.fn[type] = function(fn) {\n return this.on(type, fn);\n };\n });\n jQuery._evalUrl = function(url) {\n return jQuery.ajax({\n url: url,\n type: \"GET\",\n dataType: \"script\",\n async: false,\n global: false,\n \"throws\": true\n });\n };\n jQuery.fn.extend({\n wrapAll: function(html) {\n if (jQuery.isFunction(html)) {\n return this.each(function(i) {\n jQuery(this).wrapAll(html.call(this, i));\n });\n }\n if (this[0]) {\n var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n if (this[0].parentNode) {\n wrap.insertBefore(this[0]);\n }\n wrap.map(function() {\n var elem = this;\n while (elem.firstChild && elem.firstChild.nodeType === 1) {\n elem = elem.firstChild;\n }\n return elem;\n }).append(this);\n }\n return this;\n },\n wrapInner: function(html) {\n if (jQuery.isFunction(html)) {\n return this.each(function(i) {\n jQuery(this).wrapInner(html.call(this, i));\n });\n }\n return this.each(function() {\n var self = jQuery(this),\n contents = self.contents();\n if (contents.length) {\n contents.wrapAll(html);\n } else {\n self.append(html);\n }\n });\n },\n wrap: function(html) {\n var isFunction = jQuery.isFunction(html);\n return this.each(function(i) {\n jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n });\n },\n unwrap: function() {\n return this.parent().each(function() {\n if (!jQuery.nodeName(this, \"body\")) {\n jQuery(this).replaceWith(this.childNodes);\n }\n }).end();\n }\n });\n jQuery.expr.filters.hidden = function(elem) {\n return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 || (!support.reliableHiddenOffsets() && ((elem.style && elem.style.display) || jQuery.css(elem, \"display\")) === \"none\");\n };\n jQuery.expr.filters.visible = function(elem) {\n return !jQuery.expr.filters.hidden(elem);\n };\n var r20 = /%20/g,\n rbracket = /\\[\\]$/,\n rCRLF = /\\r?\\n/g,\n rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n function buildParams(prefix, obj, traditional, add) {\n var name;\n if (jQuery.isArray(obj)) {\n jQuery.each(obj, function(i, v) {\n if (traditional || rbracket.test(prefix)) {\n add(prefix, v);\n } else {\n buildParams(prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n }\n });\n } else if (!traditional && jQuery.type(obj) === \"object\") {\n for (name in obj) {\n buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n }\n } else {\n add(prefix, obj);\n }\n }\n jQuery.param = function(a, traditional) {\n var prefix, s = [],\n add = function(key, value) {\n value = jQuery.isFunction(value) ? value() : (value == null ? \"\" : value);\n s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n };\n if (traditional === undefined) {\n traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n }\n if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {\n jQuery.each(a, function() {\n add(this.name, this.value);\n });\n } else {\n for (prefix in a) {\n buildParams(prefix, a[prefix], traditional, add);\n }\n }\n return s.join(\"&\").replace(r20, \"+\");\n };\n jQuery.fn.extend({\n serialize: function() {\n return jQuery.param(this.serializeArray());\n },\n serializeArray: function() {\n return this.map(function() {\n var elements = jQuery.prop(this, \"elements\");\n return elements ? jQuery.makeArray(elements) : this;\n }).filter(function() {\n var type = this.type;\n return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n }).map(function(i, elem) {\n var val = jQuery(this).val();\n return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {\n return {\n name: elem.name,\n value: val.replace(rCRLF, \"\\r\\n\")\n };\n }) : {\n name: elem.name,\n value: val.replace(rCRLF, \"\\r\\n\")\n };\n }).get();\n }\n });\n jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?\n function() {\n return !this.isLocal && /^(get|post|head|put|delete|options)$/i.test(this.type) && createStandardXHR() || createActiveXHR();\n } : createStandardXHR;\n var xhrId = 0,\n xhrCallbacks = {},\n xhrSupported = jQuery.ajaxSettings.xhr();\n if (window.ActiveXObject) {\n jQuery(window).on(\"unload\", function() {\n for (var key in xhrCallbacks) {\n xhrCallbacks[key](undefined, true);\n }\n });\n }\n support.cors = !! xhrSupported && (\"withCredentials\" in xhrSupported);\n xhrSupported = support.ajax = !! xhrSupported;\n if (xhrSupported) {\n jQuery.ajaxTransport(function(options) {\n if (!options.crossDomain || support.cors) {\n var callback;\n return {\n send: function(headers, complete) {\n var i, xhr = options.xhr(),\n id = ++xhrId;\n xhr.open(options.type, options.url, options.async, options.username, options.password);\n if (options.xhrFields) {\n for (i in options.xhrFields) {\n xhr[i] = options.xhrFields[i];\n }\n }\n if (options.mimeType && xhr.overrideMimeType) {\n xhr.overrideMimeType(options.mimeType);\n }\n if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n }\n for (i in headers) {\n if (headers[i] !== undefined) {\n xhr.setRequestHeader(i, headers[i] + \"\");\n }\n }\n xhr.send((options.hasContent && options.data) || null);\n callback = function(_, isAbort) {\n var status, statusText, responses;\n if (callback && (isAbort || xhr.readyState === 4)) {\n delete xhrCallbacks[id];\n callback = undefined;\n xhr.onreadystatechange = jQuery.noop;\n if (isAbort) {\n if (xhr.readyState !== 4) {\n xhr.abort();\n }\n } else {\n responses = {};\n status = xhr.status;\n if (typeof xhr.responseText === \"string\") {\n responses.text = xhr.responseText;\n }\n try {\n statusText = xhr.statusText;\n } catch (e) {\n statusText = \"\";\n }\n if (!status && options.isLocal && !options.crossDomain) {\n status = responses.text ? 200 : 404;\n } else if (status === 1223) {\n status = 204;\n }\n }\n }\n if (responses) {\n complete(status, statusText, responses, xhr.getAllResponseHeaders());\n }\n };\n if (!options.async) {\n callback();\n } else if (xhr.readyState === 4) {\n setTimeout(callback);\n } else {\n xhr.onreadystatechange = xhrCallbacks[id] = callback;\n }\n },\n abort: function() {\n if (callback) {\n callback(undefined, true);\n }\n }\n };\n }\n });\n }\n function createStandardXHR() {\n try {\n return new window.XMLHttpRequest();\n } catch (e) {}\n }\n function createActiveXHR() {\n try {\n return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n } catch (e) {}\n }\n jQuery.ajaxSetup({\n accepts: {\n script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n },\n contents: {\n script: /(?:java|ecma)script/\n },\n converters: {\n \"text script\": function(text) {\n jQuery.globalEval(text);\n return text;\n }\n }\n });\n jQuery.ajaxPrefilter(\"script\", function(s) {\n if (s.cache === undefined) {\n s.cache = false;\n }\n if (s.crossDomain) {\n s.type = \"GET\";\n s.global = false;\n }\n });\n jQuery.ajaxTransport(\"script\", function(s) {\n if (s.crossDomain) {\n var script, head = document.head || jQuery(\"head\")[0] || document.documentElement;\n return {\n send: function(_, callback) {\n script = document.createElement(\"script\");\n script.async = true;\n if (s.scriptCharset) {\n script.charset = s.scriptCharset;\n }\n script.src = s.url;\n script.onload = script.onreadystatechange = function(_, isAbort) {\n if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {\n script.onload = script.onreadystatechange = null;\n if (script.parentNode) {\n script.parentNode.removeChild(script);\n }\n script = null;\n if (!isAbort) {\n callback(200, \"success\");\n }\n }\n };\n head.insertBefore(script, head.firstChild);\n },\n abort: function() {\n if (script) {\n script.onload(undefined, true);\n }\n }\n };\n }\n });\n var oldCallbacks = [],\n rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n jQuery.ajaxSetup({\n jsonp: \"callback\",\n jsonpCallback: function() {\n var callback = oldCallbacks.pop() || (jQuery.expando + \"_\" + (nonce++));\n this[callback] = true;\n return callback;\n }\n });\n jQuery.ajaxPrefilter(\"json jsonp\", function(s, originalSettings, jqXHR) {\n var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && !(s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test(s.data) && \"data\");\n if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n if (jsonProp) {\n s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n } else if (s.jsonp !== false) {\n s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n }\n s.converters[\"script json\"] = function() {\n if (!responseContainer) {\n jQuery.error(callbackName + \" was not called\");\n }\n return responseContainer[0];\n };\n s.dataTypes[0] = \"json\";\n overwritten = window[callbackName];\n window[callbackName] = function() {\n responseContainer = arguments;\n };\n jqXHR.always(function() {\n window[callbackName] = overwritten;\n if (s[callbackName]) {\n s.jsonpCallback = originalSettings.jsonpCallback;\n oldCallbacks.push(callbackName);\n }\n if (responseContainer && jQuery.isFunction(overwritten)) {\n overwritten(responseContainer[0]);\n }\n responseContainer = overwritten = undefined;\n });\n return \"script\";\n }\n });\n jQuery.parseHTML = function(data, context, keepScripts) {\n if (!data || typeof data !== \"string\") {\n return null;\n }\n if (typeof context === \"boolean\") {\n keepScripts = context;\n context = false;\n }\n context = context || document;\n var parsed = rsingleTag.exec(data),\n scripts = !keepScripts && [];\n if (parsed) {\n return [context.createElement(parsed[1])];\n }\n parsed = jQuery.buildFragment([data], context, scripts);\n if (scripts && scripts.length) {\n jQuery(scripts).remove();\n }\n return jQuery.merge([], parsed.childNodes);\n };\n var _load = jQuery.fn.load;\n jQuery.fn.load = function(url, params, callback) {\n if (typeof url !== \"string\" && _load) {\n return _load.apply(this, arguments);\n }\n var selector, response, type, self = this,\n off = url.indexOf(\" \");\n if (off >= 0) {\n selector = jQuery.trim(url.slice(off, url.length));\n url = url.slice(0, off);\n }\n if (jQuery.isFunction(params)) {\n callback = params;\n params = undefined;\n } else if (params && typeof params === \"object\") {\n type = \"POST\";\n }\n if (self.length > 0) {\n jQuery.ajax({\n url: url,\n type: type,\n dataType: \"html\",\n data: params\n }).done(function(responseText) {\n response = arguments;\n self.html(selector ? jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : responseText);\n }).complete(callback &&\n function(jqXHR, status) {\n self.each(callback, response || [jqXHR.responseText, status, jqXHR]);\n });\n }\n return this;\n };\n jQuery.expr.filters.animated = function(elem) {\n return jQuery.grep(jQuery.timers, function(fn) {\n return elem === fn.elem;\n }).length;\n };\n var docElem = window.document.documentElement;\n\n function getWindow(elem) {\n return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false;\n }\n jQuery.offset = {\n setOffset: function(elem, options, i) {\n var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, \"position\"),\n curElem = jQuery(elem),\n props = {};\n if (position === \"static\") {\n elem.style.position = \"relative\";\n }\n curOffset = curElem.offset();\n curCSSTop = jQuery.css(elem, \"top\");\n curCSSLeft = jQuery.css(elem, \"left\");\n calculatePosition = (position === \"absolute\" || position === \"fixed\") && jQuery.inArray(\"auto\", [curCSSTop, curCSSLeft]) > -1;\n if (calculatePosition) {\n curPosition = curElem.position();\n curTop = curPosition.top;\n curLeft = curPosition.left;\n } else {\n curTop = parseFloat(curCSSTop) || 0;\n curLeft = parseFloat(curCSSLeft) || 0;\n }\n if (jQuery.isFunction(options)) {\n options = options.call(elem, i, curOffset);\n }\n if (options.top != null) {\n props.top = (options.top - curOffset.top) + curTop;\n }\n if (options.left != null) {\n props.left = (options.left - curOffset.left) + curLeft;\n }\n if (\"using\" in options) {\n options.using.call(elem, props);\n } else {\n curElem.css(props);\n }\n }\n };\n jQuery.fn.extend({\n offset: function(options) {\n if (arguments.length) {\n return options === undefined ? this : this.each(function(i) {\n jQuery.offset.setOffset(this, options, i);\n });\n }\n var docElem, win, box = {\n top: 0,\n left: 0\n },\n elem = this[0],\n doc = elem && elem.ownerDocument;\n if (!doc) {\n return;\n }\n docElem = doc.documentElement;\n if (!jQuery.contains(docElem, elem)) {\n return box;\n }\n if (typeof elem.getBoundingClientRect !== strundefined) {\n box = elem.getBoundingClientRect();\n }\n win = getWindow(doc);\n return {\n top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),\n left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)\n };\n },\n position: function() {\n if (!this[0]) {\n return;\n }\n var offsetParent, offset, parentOffset = {\n top: 0,\n left: 0\n },\n elem = this[0];\n if (jQuery.css(elem, \"position\") === \"fixed\") {\n offset = elem.getBoundingClientRect();\n } else {\n offsetParent = this.offsetParent();\n offset = this.offset();\n if (!jQuery.nodeName(offsetParent[0], \"html\")) {\n parentOffset = offsetParent.offset();\n }\n parentOffset.top += jQuery.css(offsetParent[0], \"borderTopWidth\", true);\n parentOffset.left += jQuery.css(offsetParent[0], \"borderLeftWidth\", true);\n }\n return {\n top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n };\n },\n offsetParent: function() {\n return this.map(function() {\n var offsetParent = this.offsetParent || docElem;\n while (offsetParent && (!jQuery.nodeName(offsetParent, \"html\") && jQuery.css(offsetParent, \"position\") === \"static\")) {\n offsetParent = offsetParent.offsetParent;\n }\n return offsetParent || docElem;\n });\n }\n });\n jQuery.each({\n scrollLeft: \"pageXOffset\",\n scrollTop: \"pageYOffset\"\n }, function(method, prop) {\n var top = /Y/.test(prop);\n jQuery.fn[method] = function(val) {\n return access(this, function(elem, method, val) {\n var win = getWindow(elem);\n if (val === undefined) {\n return win ? (prop in win) ? win[prop] : win.document.documentElement[method] : elem[method];\n }\n if (win) {\n win.scrollTo(!top ? val : jQuery(win).scrollLeft(), top ? val : jQuery(win).scrollTop());\n } else {\n elem[method] = val;\n }\n }, method, val, arguments.length, null);\n };\n });\n jQuery.each([\"top\", \"left\"], function(i, prop) {\n jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {\n if (computed) {\n computed = curCSS(elem, prop);\n return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n }\n });\n });\n jQuery.each({\n Height: \"height\",\n Width: \"width\"\n }, function(name, type) {\n jQuery.each({\n padding: \"inner\" + name,\n content: type,\n \"\": \"outer\" + name\n }, function(defaultExtra, funcName) {\n jQuery.fn[funcName] = function(margin, value) {\n var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n return access(this, function(elem, type, value) {\n var doc;\n if (jQuery.isWindow(elem)) {\n return elem.document.documentElement[\"client\" + name];\n }\n if (elem.nodeType === 9) {\n doc = elem.documentElement;\n return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n }\n return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);\n }, type, chainable ? margin : undefined, chainable, null);\n };\n });\n });\n jQuery.fn.size = function() {\n return this.length;\n };\n jQuery.fn.andSelf = jQuery.fn.addBack;\n if (typeof define === \"function\" && define.amd) {\n define(\"jquery\", [], function() {\n return jQuery;\n });\n }\n var _jQuery = window.jQuery,\n _$ = window.$;\n jQuery.noConflict = function(deep) {\n if (window.$ === jQuery) {\n window.$ = _$;\n }\n if (deep && window.jQuery === jQuery) {\n window.jQuery = _jQuery;\n }\n return jQuery;\n };\n if (typeof noGlobal === strundefined) {\n window.jQuery = window.$ = jQuery;\n }\n this.$ = $;\n }\n }\n});\nreturn JQ;\n","c":"HelloKMD.JQ","d":[]},{"a":["JQ"],"b":"\nvar Ball = __class.extend({\n \"init\": function(x, y, r, vx, vy, text) {\n var $ = JQ.$;\n this.x = x;\n this.y = y;\n this.r = r;\n this.d = 2 * r;\n this.vx = vx;\n this.vy = vy;\n this.text = text;\n this.element = document.createElement(\"div\");\n this.element.innerHTML = text;\n this.element.style.cssText = \"text-align:center;position:absolute; -moz-border-radius:\" + this.d + \"px; border-radius: \" + this.d + \"px; width: \" + this.d + \"px; height: \" + this.d + \"px;background-color:green;line-height:\" + this.d + \"px;color:white;\";\n $(\"body\").append($(this.element));\n var self = this;\n this.loop = setInterval(function() {\n self.tick();\n }, 15);\n },\n \"tick\": function() {\n this.x += this.vx;\n this.y += this.vy;\n this.element.style.left = this.x + \"px\";\n this.element.style.top = this.y + \"px\";\n }\n});\nreturn Ball;\n","c":"HelloKMD.Ball","d":["HelloKMD.JQ"]},{"a":[],"b":"\nvar Bom = __class.extend({\n \"statics\": {\n \"getViewport\": function() {\n var d = document.documentElement,\n b = document.body,\n w = window,\n div = document.createElement(\"div\");\n div.innerHTML = \" <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\";\n var lt = !(div.firstChild.nodeType === 3) ? {\n left: b.scrollLeft || d.scrollLeft,\n top: b.scrollTop || d.scrollTop\n } : {\n left: w.pageXOffset,\n top: w.pageYOffset\n };\n var wh = w.innerWidth ? {\n width: w.innerWidth,\n height: w.innerHeight\n } : (d && d.clientWidth && d.clientWidth != 0 ? {\n width: d.clientWidth,\n height: d.clientHeight\n } : {\n width: b.clientWidth,\n height: b.clientHeight\n });\n return [lt.left, lt.top, wh.width, wh.height];\n }\n }\n});\nreturn Bom;\n","c":"Util.Bom","d":[]},{"a":["Ball","Bom"],"b":"\nvar Main = __class.extend({\n \"init\": function() {\n var ball = new Ball(0, 0, 28, 1, -2, \"KMD.js\");\n var vp = Bom.getViewport();\n setInterval(function() {\n (ball.x + ball.r * 2 > vp[2] || ball.x < 0) && (ball.vx *= -1);\n (ball.y + ball.r * 2 > vp[3] || ball.y < 0) && (ball.vy *= -1);\n }, 30);\n }\n});\nreturn Main;\n","c":"HelloKMD.Main","d":["HelloKMD.Ball","Util.Bom"]}],u.exec(t.all),new t.modules["HelloKMD.Main"]})(this)